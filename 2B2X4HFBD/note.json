{
  "paragraphs": [
    {
      "text": "val OptSaveMode: Option[org.apache.spark.sql.SaveMode] \u003d Some(org.apache.spark.sql.SaveMode.Overwrite)\nval DatasetId \u003d 1\nval StudyName \u003d \"anticipation\"\n\nval WorkDir \u003d s\"/tmp/$StudyName\"\nval RawDir \u003d s\"$WorkDir/raw\"\nval ProcessingDir \u003d s\"$WorkDir/processing\"",
      "dateUpdated": "Mar 4, 2016 10:09:42 AM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "tableHide": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1425548774291_925993399",
      "id": "20150305-094614_1936011931",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "OptSaveMode: Option[org.apache.spark.sql.SaveMode] \u003d Some(Overwrite)\nDatasetId: Int \u003d 1\nStudyName: String \u003d anticipation\nWorkDir: String \u003d /tmp/anticipation\nRawDir: String \u003d /tmp/anticipation/raw\nProcessingDir: String \u003d /tmp/anticipation/processing\n"
      },
      "dateCreated": "Mar 5, 2015 9:46:14 AM",
      "dateStarted": "Mar 4, 2016 10:09:42 AM",
      "dateFinished": "Mar 4, 2016 10:09:43 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Definitions",
      "text": "object Wos {\n    \n    case class Affiliation(addressLine: Option[String], enhancedNames: Option[Seq[String]])\n}",
      "dateUpdated": "Mar 4, 2016 10:09:42 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1456842644936_1289014616",
      "id": "20160301-153044_114662465",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "defined module Wos\n"
      },
      "dateCreated": "Mar 1, 2016 3:30:44 PM",
      "dateStarted": "Mar 4, 2016 10:09:42 AM",
      "dateFinished": "Mar 4, 2016 10:09:43 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Loading",
      "text": "val rawPublications \u003d sqlc.read.parquet(s\"$RawDir/publications.parquet\").persist(org.apache.spark.storage.StorageLevel.MEMORY_ONLY_SER)\nrawPublications.registerTempTable(\"raw_publications\")\n    \nval citationEdges \u003d sqlc.read.parquet(s\"$RawDir/citation_edges.parquet\").persist(org.apache.spark.storage.StorageLevel.MEMORY_ONLY_SER)",
      "dateUpdated": "Mar 4, 2016 10:09:42 AM",
      "config": {
        "tableHide": false,
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1429536714908_126304435",
      "id": "20150420-133154_24086732",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "rawPublications: org.apache.spark.sql.DataFrame \u003d [did: int, crawl_ids: array\u003cstring\u003e, pub_id: bigint, occurrences: array\u003cbigint\u003e, nb_occurrences: bigint, times_cited_field: string, references_count_field: string, is_main: boolean, is_backward: boolean, is_forward: boolean, scielo_categories_field: string, research_areas_field: string, supplement: string, scielo_collections_field: string, controlled_indexing_field: string, author_address: string, journal: string, abstract: string, pages: string, author_keywords_field: string, group_authors_field: string, wos_categories_field: string, issue: string, uncontrolled_indexing_field: string, date: string, keywords_plus_field: string, corporate_authors_field: string, publisher: string, document_types_field: string, authors_field: string, altern...citationEdges: org.apache.spark.sql.DataFrame \u003d [srcId: bigint, dstId: bigint, attr: struct\u003c_1:string,_2:array\u003cstring\u003e\u003e]\n"
      },
      "dateCreated": "Apr 20, 2015 1:31:54 PM",
      "dateStarted": "Mar 4, 2016 10:09:43 AM",
      "dateFinished": "Mar 4, 2016 10:09:44 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Processing: Publications",
      "text": "val ConferenceTypes \u003d Set(\n    \"conference paper\",\n    \"meeting abstract\",\n    \"proceedings paper\")\n\nval extractList \u003d sqlc.udf.register(\"extract_list\", (field: String) \u003d\u003e Option(field).map(_.split(\u0027;\u0027).map(_.trim).toSeq.distinct))\nval flagConferences \u003d sqlc.udf.register(\"flag_conferences\", (docTypes: Seq[String]) \u003d\u003e Option(docTypes).map(!_.map(_.toLowerCase).toSet.intersect(ConferenceTypes).isEmpty))\n\nsqlc.udf.register(\"extract_count\", { field: String \u003d\u003e\n    Option(field).flatMap(\"\"\"\\d+(?:,\\d+)?\"\"\".r.findFirstIn(_)).map(_.replaceAll(\",\", \"\").toInt)\n})\nsqlc.udf.register(\"extract_year\", { field: String \u003d\u003e\n    Option(field).flatMap(\"\"\"\\d{4}\"\"\".r.findFirstIn(_)).map(_.toShort)\n})\n\nval publications \u003d rawPublications.selectExpr(\n    \"did\",\n    \"pub_id\",\n    \"is_main\",\n    \"is_backward\",\n    \"is_forward\",\n    \"title\",\n    \"alternate_titles\",\n    \"extract_year(date) AS year\",\n    \"abstract\",\n    \"extract_count(times_cited_field) AS times_cited\",\n    \"extract_count(references_count_field) AS references_count\",\n    \"extract_list(document_types_field) AS document_types\",\n    \"extract_list(author_keywords_field) AS author_keywords\",\n    \"extract_list(keywords_plus_field) AS keywords_plus\",\n    \"extract_list(controlled_indexing_field) AS controlled_indexing\",\n    \"extract_list(uncontrolled_indexing_field) AS uncontrolled_indexing\",\n    \"extract_list(research_areas_field) AS research_areas\",\n    \"extract_list(wos_categories_field) AS wos_categories\",\n    \"extract_list(scielo_categories_field) AS scielo_categories\",\n    \"extract_list(scielo_collections_field) AS scielo_collections\",\n    \"author_address\",\n    \"wos_database\",\n    \"(is_main\u003dfalse OR title IS NOT NULL) AS is_valid\"\n).withColumn(\"is_conference\", flagConferences(\u0027document_types)).persist(org.apache.spark.storage.StorageLevel.MEMORY_ONLY_SER)\npublications.registerTempTable(\"publications\")\n\npublications.show()",
      "dateUpdated": "Mar 4, 2016 10:09:42 AM",
      "config": {
        "tableHide": false,
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1428502185370_1118322699",
      "id": "20150408-140945_355752063",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "ConferenceTypes: scala.collection.immutable.Set[String] \u003d Set(conference paper, meeting abstract, proceedings paper)\nextractList: org.apache.spark.sql.UserDefinedFunction \u003d UserDefinedFunction(\u003cfunction1\u003e,ArrayType(StringType,true),List())\nflagConferences: org.apache.spark.sql.UserDefinedFunction \u003d UserDefinedFunction(\u003cfunction1\u003e,BooleanType,List())\nres164: org.apache.spark.sql.UserDefinedFunction \u003d UserDefinedFunction(\u003cfunction1\u003e,IntegerType,List())\nres165: org.apache.spark.sql.UserDefinedFunction \u003d UserDefinedFunction(\u003cfunction1\u003e,ShortType,List())\npublications: org.apache.spark.sql.DataFrame \u003d [did: int, pub_id: bigint, is_main: boolean, is_backward: boolean, is_forward: boolean, title: string, alternate_titles: array\u003cstring\u003e, year: smallint, abstract: string, times_cited: int, references_count: int, document_types: array\u003cstring\u003e, author_keywords: array\u003cstring\u003e, keywords_plus: array\u003cstring\u003e, controlled_indexing: array\u003cstring\u003e, uncontrolled_indexing: array\u003cstring\u003e, research_areas: array\u003cstring\u003e, wos_categories: array\u003cstring\u003e, scielo_categories: array\u003cstring\u003e, scielo_collections: array\u003cstring\u003e, author_address: string, wos_database: string, is_valid: boolean, is_conference: boolean]\n+---+------+-------+-----------+----------+--------------------+----------------+----+--------------------+-----------+----------------+--------------------+--------------------+--------------------+--------------------+---------------------+--------------------+--------------------+-----------------+------------------+--------------------+--------------------+--------+-------------+\n|did|pub_id|is_main|is_backward|is_forward|               title|alternate_titles|year|            abstract|times_cited|references_count|      document_types|     author_keywords|       keywords_plus| controlled_indexing|uncontrolled_indexing|      research_areas|      wos_categories|scielo_categories|scielo_collections|      author_address|        wos_database|is_valid|is_conference|\n+---+------+-------+-----------+----------+--------------------+----------------+----+--------------------+-----------+----------------+--------------------+--------------------+--------------------+--------------------+---------------------+--------------------+--------------------+-----------------+------------------+--------------------+--------------------+--------+-------------+\n|  1|  2192|   true|      false|     false|Between National ...|            null|2012|Research on the m...|          1|              52|           [Article]|[Nanotechnology, ...|                null|                null|                 null|[Social Sciences ...|[Ethics, History ...|             null|              null|                null|Web of ScienceTM ...|    true|        false|\n|  1|  2643|  false|       true|     false|The Promises of M...|            null|1992|                null|        231|            null|                null|                null|                null|                null|                 null|                null|                null|             null|              null|                null|                null|    true|         null|\n|  1|  2446|  false|       true|     false|Scientific commun...|            null|2000|                null|         22|               0|         [News Item]|                null|                null|                null|                 null|[Science \u0026 Techno...|[Multidisciplinar...|             null|              null|                null|Web of ScienceTM ...|    true|        false|\n|  1|  3850|   true|      false|     false|In Pursuit of Nan...|            null|2014|                null|          0|               2|       [Book Review]|                null|                null|                null|                 null|[Social Sciences ...|[Ethics, History ...|             null|              null|                null|Web of ScienceTM ...|    true|        false|\n|  1|  3410|  false|       true|     false|The age of respon...|            null|2008|This article expl...|        118|              75|           [Article]|[business ethics,...|[CORPORATE SOCIAL...|                null|                 null|[Business \u0026 Econo...|[Economics, Socio...|             null|              null|                null|Web of ScienceTM ...|    true|        false|\n|  1|   677|  false|       true|     false|Understanding the...|            null|2009|What I consider i...|         13|              66|[Article, Proceed...|[Liberal governme...|                null|                null|                 null|[Education \u0026 Educ...|[Education \u0026 Educ...|             null|              null|                null|Web of ScienceTM ...|    true|         true|\n|  1|  7163|  false|       true|     false|Science for a pos...|            null|1993|                null|         15|            null|                null|                null|                null|                null|                 null|                null|                null|             null|              null|                null|                null|    true|         null|\n|  1|  2424|   true|      false|     false|Foresight on Taiw...|            null|2010|Purpose - The pur...|          0|               0|     [Journal Paper]|                null|                null|[nanotechnology, ...| [Taiwan nanotechn...|[Science \u0026 Techno...|                null|             null|              null|Hsin-Ning Su; Nat...|              Inspec|    true|        false|\n|  1|  1987|  false|       true|     false|Tumor Regression ...|            null|2011|We developed a ve...|        162|              50|           [Article]|[Pluronic, nanoca...|[GLYCOL CHITOSAN ...|                null|                 null|[Chemistry, Scien...|[Chemistry, Multi...|             null|              null|                null|Web of ScienceTM ...|    true|        false|\n|  1|  5378|  false|       true|     false|                null|            null|2003|                null|        148|            null|                null|                null|                null|                null|                 null|                null|                null|             null|              null|                null|                null|    true|         null|\n|  1|   795|  false|       true|     false|                null|            null|2009|                null|          1|            null|                null|                null|                null|                null|                 null|                null|                null|             null|              null|                null|                null|    true|         null|\n|  1|   518|  false|       true|     false|                null|            null|2010|                null|          2|            null|                null|                null|                null|                null|                 null|                null|                null|             null|              null|                null|                null|    true|         null|\n|  1|  2955|  false|       true|     false|                null|            null|1987|                null|          1|            null|                null|                null|                null|                null|                 null|                null|                null|             null|              null|                null|                null|    true|         null|\n|  1|  2799|  false|       true|     false|                null|            null|1988|                null|          1|            null|                null|                null|                null|                null|                 null|                null|                null|             null|              null|                null|                null|    true|         null|\n|  1|  8498|  false|       true|     false|                null|            null|2009|                null|          1|            null|                null|                null|                null|                null|                 null|                null|                null|             null|              null|                null|                null|    true|         null|\n|  1|   298|  false|       true|     false|Competing expecta...|            null|2010|The development o...|         19|              41|           [Article]|[technology and i...|[SCIENCE-AND-TECH...|                null|                 null|[Business \u0026 Econo...|[Management, Mult...|             null|              null|                null|Web of ScienceTM ...|    true|        false|\n|  1|  1716|  false|      false|      true|Evolution of futu...|            null|2011|This article disc...|          6|              55|           [Article]|                null|         [ABDUCTION]|                null|                 null|[Business \u0026 Econo...|[Economics, Plann...|             null|              null|                null|Web of ScienceTM ...|    true|        false|\n|  1| 11584|  false|       true|     false|Technology assess...|            null|2002|                null|          2|            null|                null|                null|                null|                null|                 null|                null|                null|             null|              null|                null|                null|    true|         null|\n|  1|  1880|  false|      false|      true|(Bio) ethicists a...|            null|2015|Over the past dec...|          0|              52|           [Article]|[Bioethics, ethic...|[MORAL PHILOSOPHE...|                null|                 null|        [Philosophy]|        [Philosophy]|             null|              null|                null|Web of ScienceTM ...|    true|        false|\n|  1|  3387|  false|       true|     false|Arenas, platforms...|            null|2002|In this article, ...|         12|              48|[Article, Proceed...|                null|                null|                null|                 null|     [Communication]|     [Communication]|             null|              null|                null|Web of ScienceTM ...|    true|         true|\n+---+------+-------+-----------+----------+--------------------+----------------+----+--------------------+-----------+----------------+--------------------+--------------------+--------------------+--------------------+---------------------+--------------------+--------------------+-----------------+------------------+--------------------+--------------------+--------+-------------+\nonly showing top 20 rows\n\n"
      },
      "dateCreated": "Apr 8, 2015 2:09:45 PM",
      "dateStarted": "Mar 4, 2016 10:09:43 AM",
      "dateFinished": "Mar 4, 2016 10:09:45 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Publications validation",
      "text": "%sql SELECT if(is_valid, \"valid\", \"invalid\"), count(*) FROM publications GROUP BY is_valid",
      "dateUpdated": "Mar 4, 2016 10:09:42 AM",
      "config": {
        "tableHide": false,
        "colWidth": 12.0,
        "editorMode": "ace/mode/sql",
        "editorHide": true,
        "title": true,
        "graph": {
          "mode": "pieChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "_c0",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "_c1",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "yAxis": {
              "name": "_c1",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1428583632693_-636610607",
      "id": "20150409-124712_1609049685",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "_c0\t_c1\nvalid\t3378\n"
      },
      "dateCreated": "Apr 9, 2015 12:47:12 PM",
      "dateStarted": "Mar 4, 2016 10:09:44 AM",
      "dateFinished": "Mar 4, 2016 10:09:47 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "OptSaveMode.foreach(publications.write.mode(_).parquet(s\"$ProcessingDir/publications.parquet\"))",
      "dateUpdated": "Mar 4, 2016 10:09:42 AM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1442478818172_-716843450",
      "id": "20150917-083338_388408565",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": ""
      },
      "dateCreated": "Sep 17, 2015 8:33:38 AM",
      "dateStarted": "Mar 4, 2016 10:09:45 AM",
      "dateFinished": "Mar 4, 2016 10:09:48 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "References overview",
      "text": "val forwardRefsStats \u003d citationEdges.filter(array_contains(\u0027attr.getField(\"_2\"), \"forward\")).groupBy(\u0027dstId).agg(count(\u0027*) as \"forward_ref_count\")\nforwardRefsStats.registerTempTable(\"forward_refs_stats\")\nval forwardRefsOverview \u003d publications.join(\n    forwardRefsStats, \u0027pub_id \u003d\u003d\u003d \u0027dstId\n).select(\n    \u0027did, \u0027pub_id, \u0027title, \u0027year, \u0027is_main,\n    \u0027times_cited, \u0027forward_ref_count, (\u0027times_cited - \u0027forward_ref_count) as \"missing_forward_ref_count\"\n)\nforwardRefsOverview.registerTempTable(\"forward_refs_overview\")\nforwardRefsOverview.describe(\"forward_ref_count\", \"missing_forward_ref_count\").show()\n\nval backwardRefsStats \u003d citationEdges.filter(array_contains(\u0027attr.getField(\"_2\"), \"backward\")).groupBy(\u0027srcId).agg(count(\u0027*) as \"backward_ref_count\")\nbackwardRefsStats.registerTempTable(\"backward_refs_stats\")\nval backwardRefsOverview \u003d publications.join(\n    backwardRefsStats, \u0027pub_id \u003d\u003d\u003d \u0027srcId\n).select(\n    \u0027did, \u0027pub_id, \u0027title, \u0027year,\n    \u0027references_count, \u0027backward_ref_count, (\u0027references_count - \u0027backward_ref_count) as \"missing_backward_ref_count\"\n)\nbackwardRefsOverview.registerTempTable(\"backward_refs_overview\")\nbackwardRefsOverview.describe(\"backward_ref_count\", \"missing_backward_ref_count\").show()",
      "dateUpdated": "Mar 4, 2016 10:09:42 AM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435736284361_-181643753",
      "id": "20150701-073804_1316110248",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "forwardRefsStats: org.apache.spark.sql.DataFrame \u003d [dstId: bigint, forward_ref_count: bigint]\nforwardRefsOverview: org.apache.spark.sql.DataFrame \u003d [did: int, pub_id: bigint, title: string, year: smallint, is_main: boolean, times_cited: int, forward_ref_count: bigint, missing_forward_ref_count: bigint]\n+-------+-----------------+-------------------------+\n|summary|forward_ref_count|missing_forward_ref_count|\n+-------+-----------------+-------------------------+\n|  count|              153|                      153|\n|   mean|4.019607843137255|       0.3660130718954248|\n| stddev|9.559904413498735|       1.0016433163369378|\n|    min|                1|                        0|\n|    max|               92|                        7|\n+-------+-----------------+-------------------------+\n\nbackwardRefsStats: org.apache.spark.sql.DataFrame \u003d [srcId: bigint, backward_ref_count: bigint]\nbackwardRefsOverview: org.apache.spark.sql.DataFrame \u003d [did: int, pub_id: bigint, title: string, year: smallint, references_count: int, backward_ref_count: bigint, missing_backward_ref_count: bigint]\n+-------+------------------+--------------------------+\n|summary|backward_ref_count|missing_backward_ref_count|\n+-------+------------------+--------------------------+\n|  count|                77|                        77|\n|   mean| 38.05194805194805|      0.012987012987012988|\n| stddev|30.941039910619494|       0.11321815437767983|\n|    min|                 1|                         0|\n|    max|               135|                         1|\n+-------+------------------+--------------------------+\n\n"
      },
      "dateCreated": "Jul 1, 2015 7:38:04 AM",
      "dateStarted": "Mar 4, 2016 10:09:48 AM",
      "dateFinished": "Mar 4, 2016 10:09:53 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql\nSELECT pub_id, title, references_count, backward_ref_count, missing_backward_ref_count\nFROM backward_refs_overview\nWHERE missing_backward_ref_count !\u003d 0 AND missing_backward_ref_count IS NOT NULL\nORDER BY missing_backward_ref_count DESC",
      "dateUpdated": "Mar 4, 2016 10:09:42 AM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/sql",
        "editorHide": true,
        "title": false,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "pub_id",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "title",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "yAxis": {
              "name": "title",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1435737475161_-518738509",
      "id": "20150701-075755_401220735",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "pub_id\ttitle\treferences_count\tbackward_ref_count\tmissing_backward_ref_count\n2558\tStrong Will in a Messy World. Ethics and the Government of Technoscience\t114\t113\t1\n"
      },
      "dateCreated": "Jul 1, 2015 7:57:55 AM",
      "dateStarted": "Mar 4, 2016 10:09:48 AM",
      "dateFinished": "Mar 4, 2016 10:09:54 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql\nSELECT pub_id, title, times_cited, forward_ref_count, missing_forward_ref_count\nFROM forward_refs_overview\nWHERE missing_forward_ref_count !\u003d 0 AND missing_forward_ref_count IS NOT NULL\nORDER BY missing_forward_ref_count DESC",
      "dateUpdated": "Mar 4, 2016 10:09:43 AM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/sql",
        "editorHide": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "pub_id",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "title",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "yAxis": {
              "name": "title",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1436786969072_1654801914",
      "id": "20150713-112929_421078285",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "pub_id\ttitle\ttimes_cited\tforward_ref_count\tmissing_forward_ref_count\n468\tValue-creating ecologies: understanding next generation business systems\t19\t12\t7\n681\tA generic foresight process framework\t32\t26\t6\n2990\tKnowledge intensive business services: prospects and policies\t77\t72\t5\n2011\tThe current state of scenario development: an overview of techniques\t96\t92\t4\n1927\tNanotechnology: the technology for the twenty-first century\t9\t6\t3\n3563\tVisions and Ethics in Current Discourse on Human Enhancement\t6\t4\t2\n1483\tAnticipatory Ethics for Emerging Technologies\t8\t6\t2\n3799\tTechnological forecasting and scenarios matter: Research into the use of information and communication technology in the home environment in 2010\t9\t7\t2\n702\tLeadership and spirituality\t3\t1\t2\n3439\tPractitioners\u0027 Views on Responsibility: Applying Nanoethics\t4\t3\t1\n234\tPublic forecasting and futures studies in Germany\t2\t1\t1\n3016\tInclusive foresight\t10\t9\t1\n1254\tIRENA - Masdar City (UAE) - exemplars of innovation into emerging markets\t2\t1\t1\n2580\tScenario planning for climate strategies development by integrating group Delphi, AHP and dynamic fuzzy cognitive maps\t6\t5\t1\n2730\tComparing recent technology foresight studies in Korea and China: towards foresight-minded governments?\t4\t3\t1\n1020\tAn assessment framework for disruptive innovation\t3\t2\t1\n3101\tMeta-Regulation and Nanotechnologies: The Challenge of Responsibilisation Within the European Commission\u0027s Code of Conduct for Responsible Nanosciences and Nanotechnologies Research\t3\t2\t1\n113\tForesight and futures in Europe: an overview\t3\t2\t1\n1227\tThe future role of government in knowledge-based economies\t3\t2\t1\n2629\tSocially responsible leadership\t3\t2\t1\n3173\tGoverning Planetary Nanomedicine: Environmental Sustainability and a UNESCO Universal Declaration on the Bioethics and Human Rights of Natural and Artificial Photosynthesis (Global Solar Fuels and Foods)\t6\t5\t1\n2938\tPitfalls in implementing a strategic early warning system\t16\t15\t1\n3256\tMaking anticipatory systems more robust\t4\t3\t1\n3929\tBenchmarking European information society developments\t3\t2\t1\n1517\tComparing foresight ldquostylerdquo in six world regions\t10\t9\t1\n2632\tRoad-mapping the societal transformation potential of social media\t10\t9\t1\n3984\tThe future of science and technology and pro-poor applications\t2\t1\t1\n3802\tForesight and anticipatory governance\t10\t9\t1\n2756\tDelphi expert panels in the scenario-based strategic planning of agriculture\t12\t11\t1\n4010\tSix shamanic concepts: charting the between in futures work\t3\t2\t1\n1253\tGenomics and society: four scenarios for 2015\t2\t1\t1\n4114\tTechnology diffusion: forecasting with bibliometric analysis and Bass model\t5\t4\t1\n"
      },
      "dateCreated": "Jul 13, 2015 11:29:29 AM",
      "dateStarted": "Mar 4, 2016 10:09:53 AM",
      "dateFinished": "Mar 4, 2016 10:09:56 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Processing: Journals",
      "text": "val journals \u003d rawPublications.withColumnRenamed(\"journal\", \"name\").select(\n    \u0027did, \u0027pub_id, \u0027name, \u0027volume, \u0027issue, \u0027pages, \u0027supplement, \u0027date\n).withColumn(\"is_valid\", \u0027name.isNotNull).persist(org.apache.spark.storage.StorageLevel.MEMORY_ONLY_SER)\njournals.registerTempTable(\"journals\")\njournals.show()",
      "dateUpdated": "Mar 4, 2016 10:09:43 AM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1428503359522_1537588965",
      "id": "20150408-142919_1054775303",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "journals: org.apache.spark.sql.DataFrame \u003d [did: int, pub_id: bigint, name: string, volume: string, issue: string, pages: string, supplement: string, date: string, is_valid: boolean]\n+---+------+--------------------+------+-----+---------+----------+----------+--------+\n|did|pub_id|                name|volume|issue|    pages|supplement|      date|is_valid|\n+---+------+--------------------+------+-----+---------+----------+----------+--------+\n|  1|  2192|          NANOETHICS|     6|    2|  101-115|      null|  SEP 2012|    true|\n|  1|  2643|    Cultural Studies|  null| null|  295-337|      null|      1992|    true|\n|  1|  2446|             SCIENCE|   287| 5458|1584-1585|      null|MAR 3 2000|    true|\n|  1|  3850|          NANOETHICS|     8|    2|  207-209|      null|  AUG 2014|    true|\n|  1|  3410| ECONOMY AND SOCIETY|    37|    1|     1-19|      null|      2008|    true|\n|  1|   677|             MINERVA|    47|    3|  243-260|      null|  SEP 2009|    true|\n|  1|  7163|             Futures|    25|    7|  739-755|      null|      1993|    true|\n|  1|  2424|           Foresight|    12|    5|    58-79|      null|      2010|    true|\n|  1|  1987|            ACS NANO|     5|    3|1995-2003|      null|  MAR 2011|    true|\n|  1|  5378|Converging techno...|  null| null|     null|      null|      2003|    true|\n|  1|   795|Sachstands-und Po...|  null| null|     null|      null|      2009|    true|\n|  1|   518|15 INT C PHOT AUG 20|  null| null|     null|      null|      2010|    true|\n|  1|  2955|DAWN BOOK ONE XENOGE|  null| null|     null|      null|      1987|    true|\n|  1|  2799|ADULTHOOD RITES BOOK|  null| null|     null|      null|      1988|    true|\n|  1|  8498|Rapport sur l\u0027eva...|  null| null|  221-237|      null|      2009|    true|\n|  1|   298|TECHNOLOGY ANALYS...|    22|    6|  693-709|      null|      2010|    true|\n|  1|  1716|             FUTURES|    43|    3|  327-336|      null|  APR 2011|    true|\n|  1| 11584|YB 2002 I ADV STUDIE|  null| null|    71-85|      null|      2002|    true|\n|  1|  1880|         PROLEGOMENA|    14|    1|    47-69|      null|  JUL 2015|    true|\n|  1|  3387|SCIENCE COMMUNICA...|    24|    2|  144-161|      null|  DEC 2002|    true|\n+---+------+--------------------+------+-----+---------+----------+----------+--------+\nonly showing top 20 rows\n\n"
      },
      "dateCreated": "Apr 8, 2015 2:29:19 PM",
      "dateStarted": "Mar 4, 2016 10:09:54 AM",
      "dateFinished": "Mar 4, 2016 10:09:56 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Journal validation",
      "text": "%sql SELECT if(is_valid, \"valid\", \"invalid\"), count(*) FROM journals GROUP BY is_valid",
      "dateUpdated": "Mar 4, 2016 10:09:43 AM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/sql",
        "editorHide": true,
        "title": true,
        "graph": {
          "mode": "pieChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "_c0",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "_c1",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "_c0",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "_c1",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1428569908787_1346345150",
      "id": "20150409-085828_553775158",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "_c0\t_c1\nvalid\t3378\n"
      },
      "dateCreated": "Apr 9, 2015 8:58:28 AM",
      "dateStarted": "Mar 4, 2016 10:09:56 AM",
      "dateFinished": "Mar 4, 2016 10:09:57 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "OptSaveMode.foreach(journals.write.mode(_).parquet(s\"$ProcessingDir/journals.parquet\"))",
      "dateUpdated": "Mar 4, 2016 10:09:43 AM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1442478911956_-299836939",
      "id": "20150917-083511_1204553952",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": ""
      },
      "dateCreated": "Sep 17, 2015 8:35:11 AM",
      "dateStarted": "Mar 4, 2016 10:09:56 AM",
      "dateFinished": "Mar 4, 2016 10:09:58 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Processing: Authors",
      "text": "object AuthorProcessingHelper {\n    \n    val ShortNamingRegex \u003d \"\"\"^[^(\\[]+\"\"\".r\n    val ExpandedNamingRegex \u003d \"\"\"\\((.+?)(?:[\\(\\\"](.+?)[\\)\\\"](.*?))?\\)\"\"\".r\n    val MaidenNameRegex \u003d \"\"\"(?:[nN]ee|[bB]orn) +(.+)\"\"\".r\n    val AffiliationRegex \u003d \"\"\"\\[ ((\\d|,)+) \\]\"\"\".r\n    \n    val InitialRegex \u003d \"\"\"^([A-Z])\\.?$\"\"\".r\n    val InitialsRegex \u003d \"\"\"^([A-Z])+$\"\"\".r\n    val DottedInitialsRegex \u003d \"\"\"^((?:[A-Z]\\.)(?:-?[A-Z]\\.)*)$\"\"\".r\n    \n    private val ComposedNameRegex \u003d \"(-.+)\".r\n    private val TrailingDotRegex \u003d \"\"\"^(.*[a-zA-Z]{2})\\.$\"\"\".r\n    \n    def parseFullName(str: String): Option[(String, Seq[String], Option[String])] \u003d {\n        val chunks \u003d str.split(\",\").map(_.trim).toSeq\n        chunks.size match {\n            case 1 \u003d\u003e\n                val names \u003d parseNameList(chunks(0))\n                Some((names.last, names.dropRight(1), None))\n            case 2 | 3 \u003d\u003e Some((chunks(0), parseNameList(chunks(1)), chunks.lift(2)))\n            case _ \u003d\u003e\n                // Unexpected author full name format\n                None\n        }\n    }\n    \n    def cleanName(name: String): String \u003d {\n        TrailingDotRegex.findFirstMatchIn(name).map(_.group(1)).getOrElse(name)\n    }\n    \n    private def parseNameList(str: String): Seq[String] \u003d {\n        str.split(\" \").foldRight(Seq.empty[String]) {\n            case (name, Seq(ComposedNameRegex(part), tail @ _*)) \u003d\u003e (name + part) +: tail\n            case (name, list)                                    \u003d\u003e name +: list\n        }\n    }\n}\n\nval isAnonymous \u003d sqlc.udf.register(\"is_anonymous\", (str: String) \u003d\u003e str.startsWith(\"[Anonymous]\"))\n\nval extractShortNaming \u003d udf { str: String \u003d\u003e\n    AuthorProcessingHelper.ShortNamingRegex.findFirstIn(str).flatMap(AuthorProcessingHelper.parseFullName)\n}\nval extractExpandedNaming \u003d udf { str: String \u003d\u003e\n    AuthorProcessingHelper.ExpandedNamingRegex.findFirstMatchIn(str).map { m \u003d\u003e\n        val fullName \u003d Option(m.group(3)).map(s \u003d\u003e s\"${m.group(1).trim} ${s.trim}\").getOrElse(m.group(1).trim)\n        val nickname \u003d Option(m.group(2)).map(_.trim)\n        val maidenName \u003d nickname.flatMap { str \u003d\u003e\n            AuthorProcessingHelper.MaidenNameRegex.findFirstMatchIn(str)\n        }.flatMap(m \u003d\u003e Option(m.group(1))).map(_.trim)\n        (fullName, if (maidenName.isEmpty) nickname else None, maidenName)\n    }\n}\nval extractNames \u003d udf { expandedNaming: org.apache.spark.sql.Row \u003d\u003e\n    Option(expandedNaming).flatMap(r \u003d\u003e AuthorProcessingHelper.parseFullName(r.getString(0)))\n}\nval extractGivenNames \u003d udf { (extractedNames: org.apache.spark.sql.Row, shortNaming: org.apache.spark.sql.Row) \u003d\u003e\n    (Option(extractedNames) orElse Option(shortNaming)).map { r \u003d\u003e\n        r.getAs[Seq[String]](1).map(AuthorProcessingHelper.cleanName).flatMap {\n            // Separate names/initials\n            case AuthorProcessingHelper.InitialsRegex(initals) \u003d\u003e initals.map(_.toString)\n            case AuthorProcessingHelper.DottedInitialsRegex(initals) \u003d\u003e initals.split(\u0027.\u0027).foldLeft(Seq.empty[String]) { (l, a) \u003d\u003e if (a.startsWith(\"-\")) l.init :+ (l.last + a) else l :+ a }\n            case name: String \u003d\u003e Seq(name)\n        }.map(_.split(\"-\").flatMap {\n            case AuthorProcessingHelper.InitialRegex(inital) \u003d\u003e inital.map(_.toString)\n            case name \u003d\u003e Seq(name)\n        })\n    }\n}\nval extractSuffix \u003d udf { (extractedNames: org.apache.spark.sql.Row, shortNaming: org.apache.spark.sql.Row) \u003d\u003e\n    (Option(extractedNames) orElse Option(shortNaming)).flatMap { r \u003d\u003e\n        Option(r.getString(2))\n    }\n}\n\nval extractAffiliations \u003d udf { str: String \u003d\u003e\n    AuthorProcessingHelper.AffiliationRegex.findFirstMatchIn(str)\n        .flatMap(m \u003d\u003e Option(m.group(1)))\n        .map(_.split(\u0027,\u0027).map(_.trim.toShort).toSeq.distinct)\n}\n\nval processSuffix \u003d udf { (shortNaming: org.apache.spark.sql.Row, potentialSuffix: String, givenNames: Seq[Seq[String]]) \u003d\u003e\n    val optPotentialSuffix \u003d Option(potentialSuffix)\n    val optGivenNames \u003d Option(givenNames)\n    \n    val initials \u003d optGivenNames.map(_.map(_.head.head.toString).mkString(\"\")).getOrElse(\"\")\n    val initialsFromShortNaming \u003d Option(shortNaming).flatMap(_.getAs[Seq[String]](1).headOption)\n    \n    if (optPotentialSuffix.isDefined \u0026\u0026 optPotentialSuffix.map(initials + _) \u003d\u003d initialsFromShortNaming) {\n        // The suffix is present at the end of the short naming so it\u0027s actually a name\n        // e.g. Minder, EI (Minder, E., I)\n        (None, optGivenNames.map { list \u003d\u003e\n            optPotentialSuffix.toSeq.flatMap { potentialSuffix \u003d\u003e\n                list :+ Seq(potentialSuffix)\n            }\n        })\n    } else if (optPotentialSuffix.isDefined \u0026\u0026 optPotentialSuffix.map(_ + initials) \u003d\u003d initialsFromShortNaming) {\n        // The suffix is present at the beginning of the short naming so it\u0027s actually a name\n        // e.g. Svetlana, VS (Svetlana, Selivanova, V)\n        (None, optGivenNames.map { list \u003d\u003e\n            optPotentialSuffix.toSeq.flatMap { potentialSuffix \u003d\u003e\n                Seq(potentialSuffix) +: list\n            }\n        })\n    } else {\n        (optPotentialSuffix, optGivenNames)\n    }\n}\n\ndef generateAuthorsDF(df: org.apache.spark.sql.DataFrame): org.apache.spark.sql.DataFrame \u003d {\n    df.withColumn(\n        \"is_anonymous\", isAnonymous(\u0027raw)\n    ).withColumn(\n        \"short_naming\", extractShortNaming(\u0027raw)\n    ).withColumn(\n        \"expanded_naming\", extractExpandedNaming(\u0027raw)\n    ).withColumn(\n        \"extracted_names\", extractNames(\u0027expanded_naming)\n    ).withColumn(\n        \"potential_given_names\", extractGivenNames(\u0027extracted_names, \u0027short_naming)\n    ).withColumn(\n        \"last_name\", \u0027short_naming.getField(\"_1\")\n    ).withColumn(\n        \"nickname\", \u0027expanded_naming.getField(\"_2\")\n    ).withColumn(\n        \"maiden_name\", \u0027expanded_naming.getField(\"_3\")\n    ).withColumn(\n        \"potential_suffix\", extractSuffix(\u0027extracted_names, \u0027short_naming)\n    ).withColumn(\n        \"processed_suffix\", processSuffix(\u0027short_naming, \u0027potential_suffix, \u0027potential_given_names)\n    ).withColumn(\n        \"suffix\", \u0027processed_suffix.getField(\"_1\")\n    ).withColumn(\n        \"given_names\", \u0027processed_suffix.getField(\"_2\")\n    ).withColumn(\n        \"affiliations\", extractAffiliations(\u0027raw)\n    ).withColumn(\n        \"is_valid\", \u0027last_name.isNotNull or \u0027is_anonymous\n    )\n}\n\nval authors \u003d generateAuthorsDF(\n    rawPublications.filter(\u0027is_summary \u003d\u003d\u003d false).select(\n        \u0027did, \u0027pub_id, \u0027is_main, \u0027is_backward, \u0027is_forward, \u0027authors_field\n    ).explode(\"authors_field\", \"raw\") { field: String \u003d\u003e\n        Option(field).map(_.replaceFirst(\"\"\"\\.\\.\\.More\\.\\.\\.Less\"\"\", \"\").split(\u0027;\u0027).toSeq.map(_.trim)).getOrElse(Seq.empty)\n    }.filter(\"raw NOT LIKE \u0027et al%\u0027\").select(\u0027did, \u0027pub_id, \u0027raw).rdd.zipWithUniqueId().map {\n        case (r, id) \u003d\u003e (r.getInt(0), r.getLong(1), id, r.getString(2))\n    }.toDF(\"did\", \"pub_id\", \"id\", \"raw\")\n).select(\n    \u0027did, \u0027pub_id, \u0027id, \u0027raw, \u0027is_anonymous, \u0027last_name, \u0027maiden_name, \u0027given_names, \u0027suffix, \u0027nickname, \u0027affiliations, \u0027is_valid\n).persist(org.apache.spark.storage.StorageLevel.MEMORY_ONLY_SER)\nauthors.registerTempTable(\"authors\")\nauthors.show()",
      "dateUpdated": "Mar 4, 2016 10:09:43 AM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1434629754103_-825337420",
      "id": "20150618-121554_1370125426",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "defined module AuthorProcessingHelper\nisAnonymous: org.apache.spark.sql.UserDefinedFunction \u003d UserDefinedFunction(\u003cfunction1\u003e,BooleanType,List())\nextractShortNaming: org.apache.spark.sql.UserDefinedFunction \u003d UserDefinedFunction(\u003cfunction1\u003e,StructType(StructField(_1,StringType,true), StructField(_2,ArrayType(StringType,true),true), StructField(_3,StringType,true)),List(StringType))\nextractExpandedNaming: org.apache.spark.sql.UserDefinedFunction \u003d UserDefinedFunction(\u003cfunction1\u003e,StructType(StructField(_1,StringType,true), StructField(_2,StringType,true), StructField(_3,StringType,true)),List(StringType))\nextractNames: org.apache.spark.sql.UserDefinedFunction \u003d UserDefinedFunction(\u003cfunction1\u003e,StructType(StructField(_1,StringType,true), StructField(_2,ArrayType(StringType,true),true), StructField(_3,StringType,true)),List())\nextractGivenNames: org.apache.spark.sql.UserDefinedFunction \u003d UserDefinedFunction(\u003cfunction2\u003e,ArrayType(ArrayType(StringType,true),true),List())\nextractSuffix: org.apache.spark.sql.UserDefinedFunction \u003d UserDefinedFunction(\u003cfunction2\u003e,StringType,List())\nextractAffiliations: org.apache.spark.sql.UserDefinedFunction \u003d UserDefinedFunction(\u003cfunction1\u003e,ArrayType(ShortType,false),List(StringType))\nprocessSuffix: org.apache.spark.sql.UserDefinedFunction \u003d UserDefinedFunction(\u003cfunction3\u003e,StructType(StructField(_1,StringType,true), StructField(_2,ArrayType(ArrayType(StringType,true),true),true)),List())\ngenerateAuthorsDF: (df: org.apache.spark.sql.DataFrame)org.apache.spark.sql.DataFrame\nauthors: org.apache.spark.sql.DataFrame \u003d [did: int, pub_id: bigint, id: bigint, raw: string, is_anonymous: boolean, last_name: string, maiden_name: string, given_names: array\u003carray\u003cstring\u003e\u003e, suffix: string, nickname: string, affiliations: array\u003csmallint\u003e, is_valid: boolean]\n+---+------+---+--------------------+------------+---------+-----------+--------------------+------+--------+------------+--------+\n|did|pub_id| id|                 raw|is_anonymous|last_name|maiden_name|         given_names|suffix|nickname|affiliations|is_valid|\n+---+------+---+--------------------+------------+---------+-----------+--------------------+------+--------+------------+--------+\n|  1|  2192|  0|Lemanczyk, S (Lem...|       false|Lemanczyk|       null|[WrappedArray(Szc...|  null|    null|        null|    true|\n|  1|  2446| 32|Barinaga, M (Bari...|       false| Barinaga|       null|   [WrappedArray(M)]|  null|    null|        null|    true|\n|  1|  3850| 64|Vasko, SE (Vasko,...|       false|    Vasko|       null|[WrappedArray(Ste...|  null|    null|        null|    true|\n|  1|  3410| 96|Shamir, R (Shamir...|       false|   Shamir|       null|[WrappedArray(Ron...|  null|    null|        null|    true|\n|  1|   677|128|Pestre, D (Pestre...|       false|   Pestre|       null|[WrappedArray(Dom...|  null|    null|        null|    true|\n|  1|  2424|160|        Hsin-Ning Su|       false|       Su|       null|[WrappedArray(Hsi...|  null|    null|        null|    true|\n|  1|  2424|192|        Pei-Chun Lee|       false|      Lee|       null|[WrappedArray(Pei...|  null|    null|        null|    true|\n|  1|  2424|224|        Yuan, B.J.C.|       false|     Yuan|       null|[WrappedArray(B),...|  null|    null|        null|    true|\n|  1|  1987|256|Choi, WI (Choi, W...|       false|     Choi|       null|[WrappedArray(Won...|  null|    null|      [1, 2]|    true|\n|  1|  1987|288|Kim, JY (Kim, Ja-...|       false|      Kim|       null|[WrappedArray(Ja,...|  null|    null|      [1, 2]|    true|\n|  1|  1987|320|Kang, C (Kang, Ch...|       false|     Kang|       null|[WrappedArray(Chul)]|  null|    null|         [3]|    true|\n|  1|  1987|352|Byeon, CC (Byeon,...|       false|    Byeon|       null|[WrappedArray(Cla...|  null|    null|         [4]|    true|\n|  1|  1987|384|Kim, YH (Kim, You...|       false|      Kim|       null|[WrappedArray(You...|  null|    null|      [1, 2]|    true|\n|  1|  1987|416|Tee, G (Tee, Giyo...|       false|      Tee|       null|[WrappedArray(Giy...|  null|    null|      [1, 2]|    true|\n|  1|   298|448|van Lente, H (van...|       false|van Lente|       null|[WrappedArray(Har...|  null|    null|         [1]|    true|\n|  1|   298|480|Bakker, S (Bakker...|       false|   Bakker|       null|[WrappedArray(Sjo...|  null|    null|         [1]|    true|\n|  1|  1716|512|Kuosa, T (Kuosa, ...|       false|    Kuosa|       null|[WrappedArray(Tuo...|  null|    null|        null|    true|\n|  1|  1880|544|Pustovrh, T (Pust...|       false| Pustovrh|       null|[WrappedArray(Toni)]|  null|    null|         [1]|    true|\n|  1|  1880|576|Mali, F (Mali, Fr...|       false|     Mali|       null|[WrappedArray(Fra...|  null|    null|         [1]|    true|\n|  1|  3387|608|Bauer, MW (Bauer,...|       false|    Bauer|       null|   [WrappedArray(W)]|  null|    null|        null|    true|\n+---+------+---+--------------------+------------+---------+-----------+--------------------+------+--------+------------+--------+\nonly showing top 20 rows\n\n"
      },
      "dateCreated": "Jun 18, 2015 12:15:54 PM",
      "dateStarted": "Mar 4, 2016 10:09:57 AM",
      "dateFinished": "Mar 4, 2016 10:10:00 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "OptSaveMode.foreach(authors.write.mode(_).parquet(s\"$ProcessingDir/authors.parquet\"))",
      "dateUpdated": "Mar 4, 2016 10:09:43 AM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1437033289954_-1432660338",
      "id": "20150716-075449_1392498148",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": ""
      },
      "dateCreated": "Jul 16, 2015 7:54:49 AM",
      "dateStarted": "Mar 4, 2016 10:10:00 AM",
      "dateFinished": "Mar 4, 2016 10:10:01 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Author test data",
      "text": "generateAuthorsDF(\n    sc.parallelize(Seq(\n        (\"[Anonymous]\"),\n        (\"Chen, SH (Chen, Shu-Heng)[ 2,4 ]\"),\n        (\"Guerard, JB (Guerard, John B., Jr.)[ 1 ]\"),\n        (\"Wong, C.W.Y.\"),\n        (\"Lin, H.-W.W.\"),\n        (\"Bracken, LJ (Bracken, L. J. (nee Bull))\"),\n        (\"van Koppen, CSA (van Koppen, C. S. A. (Kris))[ 1 ]\"),\n        (\"Cox, J.E. , Jr.\"),\n        (\"Minder, EI (Minder, E., I)\"),\n        (\"Svetlana, VS (Svetlana, Selivanova, V)\"))).toDF(\"raw\")\n).registerTempTable(\"authors_test\")",
      "dateUpdated": "Mar 4, 2016 10:09:43 AM",
      "config": {
        "colWidth": 12.0,
        "editorHide": true,
        "tableHide": true,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1438848173506_-83710842",
      "id": "20150806-080253_1280547758",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": ""
      },
      "dateCreated": "Aug 6, 2015 8:02:53 AM",
      "dateStarted": "Mar 4, 2016 10:10:00 AM",
      "dateFinished": "Mar 4, 2016 10:10:01 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Author test data output",
      "text": "%sql SELECT raw, is_anonymous, last_name, maiden_name, given_names, suffix, nickname, affiliations FROM authors_test",
      "dateUpdated": "Mar 4, 2016 10:09:43 AM",
      "config": {
        "colWidth": 12.0,
        "editorHide": true,
        "tableHide": true,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "raw",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "is_anonymous",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "raw",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "is_anonymous",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/sql",
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1438853765522_2116479818",
      "id": "20150806-093605_399668157",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "raw\tis_anonymous\tlast_name\tmaiden_name\tgiven_names\tsuffix\tnickname\taffiliations\n[Anonymous]\ttrue\tnull\tnull\tnull\tnull\tnull\tnull\nChen, SH (Chen, Shu-Heng)[ 2,4 ]\tfalse\tChen\tnull\tWrappedArray(WrappedArray(Shu, Heng))\tnull\tnull\tWrappedArray(2, 4)\nGuerard, JB (Guerard, John B., Jr.)[ 1 ]\tfalse\tGuerard\tnull\tWrappedArray(WrappedArray(John), WrappedArray(B))\tJr.\tnull\tWrappedArray(1)\nWong, C.W.Y.\tfalse\tWong\tnull\tWrappedArray(WrappedArray(C), WrappedArray(W), WrappedArray(Y))\tnull\tnull\tnull\nLin, H.-W.W.\tfalse\tLin\tnull\tWrappedArray(WrappedArray(H, W), WrappedArray(W))\tnull\tnull\tnull\nBracken, LJ (Bracken, L. J. (nee Bull))\tfalse\tBracken\tBull\tWrappedArray(WrappedArray(L), WrappedArray(J))\tnull\tnull\tnull\nvan Koppen, CSA (van Koppen, C. S. A. (Kris))[ 1 ]\tfalse\tvan Koppen\tnull\tWrappedArray(WrappedArray(C), WrappedArray(S), WrappedArray(A))\tnull\tKris\tWrappedArray(1)\nCox, J.E. , Jr.\tfalse\tCox\tnull\tWrappedArray(WrappedArray(J), WrappedArray(E))\tJr.\tnull\tnull\nMinder, EI (Minder, E., I)\tfalse\tMinder\tnull\tWrappedArray(WrappedArray(E), WrappedArray(I))\tnull\tnull\tnull\nSvetlana, VS (Svetlana, Selivanova, V)\tfalse\tSvetlana\tnull\tWrappedArray(WrappedArray(V), WrappedArray(Selivanova))\tnull\tnull\tnull\n"
      },
      "dateCreated": "Aug 6, 2015 9:36:05 AM",
      "dateStarted": "Mar 4, 2016 10:10:01 AM",
      "dateFinished": "Mar 4, 2016 10:10:01 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Given name edge cases",
      "text": "%sql\nSELECT id, raw, name_part\nFROM (\n    SELECT id, raw, name_part, regexp_extract(name_part, \"(\\\\.)\", 1) AS x\n    FROM (\n        SELECT id, raw, name, name_part\n        FROM authors\n        LATERAL VIEW explode(given_names) lv1 AS name\n        LATERAL VIEW explode(name) lv2 AS name_part\n    ) t\n) u\nWHERE x !\u003d \"\"\nORDER BY id",
      "dateUpdated": "Mar 4, 2016 10:09:43 AM",
      "config": {
        "tableHide": false,
        "colWidth": 12.0,
        "editorMode": "ace/mode/sql",
        "editorHide": true,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "id",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "raw",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "id",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "raw",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1438785301016_1929745545",
      "id": "20150805-143501_2042849234",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "id\traw\tname_part\n"
      },
      "dateCreated": "Aug 5, 2015 2:35:01 PM",
      "dateStarted": "Mar 4, 2016 10:10:01 AM",
      "dateFinished": "Mar 4, 2016 10:10:02 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Author validation",
      "text": "%sql SELECT if(is_valid, \"valid\", \"invalid\"), if(is_anonymous, \"anonymous\", \"defined\"), count(*) FROM authors GROUP BY is_valid, is_anonymous",
      "dateUpdated": "Mar 4, 2016 10:09:43 AM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/sql",
        "editorHide": true,
        "title": true,
        "graph": {
          "mode": "multiBarChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "_c0",
              "index": 0.0,
              "aggr": "sum"
            },
            {
              "name": "_c1",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "_c2",
              "index": 2.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "_c0",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "_c1",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1428579807728_2059392058",
      "id": "20150409-114327_88153378",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "_c0\t_c1\t_c2\nvalid\tanonymous\t1\nvalid\tdefined\t4454\n"
      },
      "dateCreated": "Apr 9, 2015 11:43:27 AM",
      "dateStarted": "Mar 4, 2016 10:10:02 AM",
      "dateFinished": "Mar 4, 2016 10:10:04 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Author affiliation count",
      "text": "%sql SELECT affiliation_count, count(*) FROM (SELECT if(affiliations IS NULL, 0, size(affiliations)) AS affiliation_count FROM authors WHERE is_valid\u003dtrue AND is_anonymous\u003dfalse) t GROUP BY affiliation_count",
      "dateUpdated": "Mar 4, 2016 10:09:44 AM",
      "config": {
        "tableHide": false,
        "colWidth": 12.0,
        "editorMode": "ace/mode/sql",
        "editorHide": true,
        "title": true,
        "graph": {
          "mode": "pieChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "affiliation_count",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "_c1",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "affiliation_count",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1428659979879_1093761210",
      "id": "20150410-095939_47769180",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "affiliation_count\t_c1\n0\t2077\n1\t2034\n2\t288\n3\t44\n4\t10\n5\t1\n"
      },
      "dateCreated": "Apr 10, 2015 9:59:39 AM",
      "dateStarted": "Mar 4, 2016 10:10:02 AM",
      "dateFinished": "Mar 4, 2016 10:10:05 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Authors without affiliation by year",
      "text": "%sql\nSELECT year, count(*)\nFROM authors JOIN publications ON authors.pub_id\u003dpublications.pub_id\nWHERE authors.is_valid\u003dtrue AND authors.is_anonymous\u003dfalse AND publications.is_valid\u003dtrue AND affiliations IS NULL\nGROUP BY year",
      "dateUpdated": "Mar 4, 2016 10:09:44 AM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/sql",
        "editorHide": true,
        "title": true,
        "graph": {
          "mode": "multiBarChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "year",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "_c1",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "year",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "_c1",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1428667675188_399578133",
      "id": "20150410-120755_734213797",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "year\t_c1\n1943\t1\n1960\t9\n1962\t2\n1964\t2\n1974\t2\n1976\t5\n1977\t5\n1978\t4\n1979\t4\n1980\t1\n1981\t2\n1982\t1\n1983\t4\n1984\t9\n1985\t3\n1986\t4\n1987\t3\n1988\t4\n1989\t4\n1990\t5\n1991\t9\n1992\t4\n1993\t7\n1994\t11\n1995\t6\n1996\t6\n1997\t21\n1998\t20\n1999\t23\n2000\t34\n2001\t61\n2002\t73\n2003\t85\n2004\t199\n2005\t196\n2006\t204\n2007\t335\n2008\t80\n2009\t125\n2010\t141\n2011\t89\n2012\t100\n2013\t71\n2014\t86\n2015\t17\n"
      },
      "dateCreated": "Apr 10, 2015 12:07:55 PM",
      "dateStarted": "Mar 4, 2016 10:10:04 AM",
      "dateFinished": "Mar 4, 2016 10:10:07 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Author affiliation count from 2008",
      "text": "%sql\nSELECT affiliation_count, count(*)\nFROM (\n    SELECT if(affiliations IS NULL, 0, size(affiliations)) AS affiliation_count\n    FROM authors JOIN publications ON authors.pub_id\u003dpublications.pub_id\n    WHERE authors.is_valid\u003dtrue AND authors.is_anonymous\u003dfalse AND publications.is_valid\u003dtrue AND year \u003e 2007\n) t\nGROUP BY affiliation_count",
      "dateUpdated": "Mar 4, 2016 10:09:44 AM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/sql",
        "editorHide": true,
        "title": true,
        "graph": {
          "mode": "multiBarChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "affiliation_count",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "_c1",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "affiliation_count",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "_c1",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1428668000133_247878153",
      "id": "20150410-121320_524961471",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "affiliation_count\t_c1\n0\t709\n1\t2011\n2\t284\n3\t44\n4\t10\n5\t1\n"
      },
      "dateCreated": "Apr 10, 2015 12:13:20 PM",
      "dateStarted": "Mar 4, 2016 10:10:05 AM",
      "dateFinished": "Mar 4, 2016 10:10:09 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Processing: Institutions",
      "text": "val parseAffiliation \u003d {\n    val AddressExtractor \u003d \"\"\"\\[ (\\d+) \\] (.+)\"\"\".r\n    \n    sqlc.udf.register(\"parse_affiliation\", (str: String) \u003d\u003e {\n        Option(str) match {\n            case Some(AddressExtractor(idx, rawAddress)) \u003d\u003e (Some(idx.toShort), Some(rawAddress.trim))\n            case _                                       \u003d\u003e (None, None)\n        }\n    })\n}\n\nval institutions \u003d rawPublications.explode(\"affiliations_field\", \"affiliation\") { affiliations: Seq[Wos.Affiliation] \u003d\u003e\n    Option(affiliations).toSeq.flatten\n}.withColumn(\n    \"parsed_affiliation\", parseAffiliation(\u0027affiliation.getField(\"addressLine\"))\n).select(\n    \u0027did,\n    \u0027pub_id,\n    \u0027parsed_affiliation.getField(\"_1\") as \"idx\",\n    \u0027parsed_affiliation.getField(\"_2\") as \"address\",\n    \u0027affiliation.getField(\"enhancedNames\") as \"enhanced_names\"\n).withColumn(\n    \"is_valid\", \u0027address.isNotNull\n)\n\ninstitutions.registerTempTable(\"institutions\")\ninstitutions.show()",
      "dateUpdated": "Mar 4, 2016 10:09:44 AM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1428421692873_1711805159",
      "id": "20150407-154812_808492516",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "parseAffiliation: org.apache.spark.sql.UserDefinedFunction \u003d UserDefinedFunction(\u003cfunction1\u003e,StructType(StructField(_1,ShortType,true), StructField(_2,StringType,true)),List())\ninstitutions: org.apache.spark.sql.DataFrame \u003d [did: int, pub_id: bigint, idx: smallint, address: string, enhanced_names: array\u003cstring\u003e, is_valid: boolean]\n+---+------+---+--------------------+--------------------+--------+\n|did|pub_id|idx|             address|      enhanced_names|is_valid|\n+---+------+---+--------------------+--------------------+--------+\n|  1|  2192|  1|Univ Nottingham, ...|[University of No...|    true|\n|  1|  3850|  1|Penn State Univ, ...|[Penn State Unive...|    true|\n|  1|  3410|  1|Tel Aviv Univ, De...|[Tel Aviv Univers...|    true|\n|  1|  1987|  1|Gwangju Inst Sci ...|[Gwangju Institut...|    true|\n|  1|  1987|  2|Gwangju Inst Sci ...|[Gwangju Institut...|    true|\n|  1|  1987|  3|Gwangju Inst Sci ...|[Gwangju Institut...|    true|\n|  1|  1987|  4|Kyungpook Natl Un...|[Kyungpook Nation...|    true|\n|  1|   298|  1|Univ Utrecht, Dep...|[University of Ut...|    true|\n|  1|  1716|  1|Nanyang Technol U...|[Nanyang Technolo...|    true|\n|  1|  1880|  1|Univ Ljubljana, F...|[University of Lj...|    true|\n|  1|  3387|  1|Univ London Londo...|[London School Ec...|    true|\n|  1|  2210|  1|Univ Manchester, ...|[University of Ma...|    true|\n|  1|  1430|  1|RAND Corp, RAND P...|  [RAND Corporation]|    true|\n|  1|  1430|  2|Univ Oxford, Envi...|[University of Ox...|    true|\n|  1|  1430|  3|Penn State Univ, ...|[Penn State Unive...|    true|\n|  1|  1430|  4|Earth \u0026 Environm ...|                null|    true|\n|  1|  1430|  5|Grenoble Inst Tec...|[Institut Nationa...|    true|\n|  1|  1430|  6|Univ Chicago, Dep...|[University of Ch...|    true|\n|  1|  3570|  1|CSIR, Natl Ctr Na...|[Council for Scie...|    true|\n|  1|  3570|  2|North West Univ, ...|[North West Unive...|    true|\n+---+------+---+--------------------+--------------------+--------+\nonly showing top 20 rows\n\n"
      },
      "dateCreated": "Apr 7, 2015 3:48:12 PM",
      "dateStarted": "Mar 4, 2016 10:10:07 AM",
      "dateFinished": "Mar 4, 2016 10:10:09 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Institutions validation",
      "text": "%sql SELECT if(is_valid, \"valid\", \"invalid\"), count(*) FROM institutions GROUP BY is_valid",
      "dateUpdated": "Mar 4, 2016 10:09:44 AM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/sql",
        "editorHide": true,
        "title": true,
        "graph": {
          "mode": "pieChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "_c0",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "_c1",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "yAxis": {
              "name": "_c1",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1428581701123_-1347952195",
      "id": "20150409-121501_1274479161",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "_c0\t_c1\nvalid\t2580\n"
      },
      "dateCreated": "Apr 9, 2015 12:15:01 PM",
      "dateStarted": "Mar 4, 2016 10:10:09 AM",
      "dateFinished": "Mar 4, 2016 10:10:11 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "OptSaveMode.foreach(institutions.write.mode(_).parquet(s\"$ProcessingDir/institutions.parquet\"))",
      "dateUpdated": "Mar 4, 2016 10:09:44 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1442479081019_1036825068",
      "id": "20150917-083801_1335894436",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": ""
      },
      "dateCreated": "Sep 17, 2015 8:38:01 AM",
      "dateStarted": "Mar 4, 2016 10:10:09 AM",
      "dateFinished": "Mar 4, 2016 10:10:11 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "",
      "dateUpdated": "Mar 4, 2016 10:09:44 AM",
      "config": {
        "colWidth": 12.0,
        "editorHide": false,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1428678023528_7071764",
      "id": "20150410-150023_497546737",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT"
      },
      "dateCreated": "Apr 10, 2015 3:00:23 PM",
      "dateStarted": "Mar 4, 2016 10:10:11 AM",
      "dateFinished": "Mar 4, 2016 10:10:11 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "[13] Data processing",
  "id": "2B2X4HFBD",
  "angularObjects": {
    "2BECU381X": [],
    "2BFE4973F": [],
    "2BDUP8TX1": [],
    "2BC2TVSBR": [],
    "2BEK1W1PD": [],
    "2BEV8A6Z4": [],
    "2BCVF5P5F": [],
    "2BEMYV7QQ": [],
    "2BFPPNXXV": [],
    "2BD9VECZR": [],
    "2BE14FKBG": [],
    "2BEKWFP9V": [],
    "2BDPVAN2T": [],
    "2BDMC46FS": [],
    "2BFC9NN6P": [],
    "2BE7P7NCM": [],
    "2BFQQPY3C": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}