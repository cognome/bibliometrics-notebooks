{
  "paragraphs": [
    {
      "text": "%md\nThe aim of this proof of concept is to disambiguate entities according to their properties and their relationships with other entities and to do it with GraphX, the Spark\u0027s API for graph-parallel computation.",
      "dateUpdated": "Mar 4, 2016 4:04:44 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorHide": false,
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431502101158_1700888887",
      "id": "20150513-072821_1399681871",
      "dateCreated": "May 13, 2015 7:28:21 AM",
      "dateStarted": "Mar 4, 2016 2:25:12 PM",
      "dateFinished": "Mar 4, 2016 2:25:12 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Configuration",
      "text": "val NumPartitions \u003d 32\nval OptSaveMode: Option[org.apache.spark.sql.SaveMode] \u003d Some(org.apache.spark.sql.SaveMode.Overwrite/*ErrorIfExists*/)\n\nval DatasetId \u003d 1\nval StudyName \u003d \"anticipation\"\n\nval WorkDir \u003d s\"/tmp/$StudyName\"\nval ProcessingDir \u003d s\"$WorkDir/processing\"\nval DisambigDir \u003d s\"$WorkDir/disambiguation\"",
      "dateUpdated": "Mar 4, 2016 4:04:44 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false,
        "editorMode": "ace/mode/scala",
        "enabled": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431335369961_1135548756",
      "id": "20150511-090929_1162264847",
      "dateCreated": "May 11, 2015 9:09:29 AM",
      "dateStarted": "Mar 4, 2016 2:25:12 PM",
      "dateFinished": "Mar 4, 2016 2:25:46 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "",
      "text": "def buildName(nameParts: Seq[String]) \u003d nameParts.mkString(\"-\")\n\nval extractFirstName \u003d sqlc.udf.register(\"extract_first_name\", { givenNames: Seq[Seq[String]] \u003d\u003e Option(givenNames).flatMap(_.headOption).map(buildName) })\n\nval extractMiddleNames \u003d sqlc.udf.register(\"extract_middle_names\", { givenNames: Seq[Seq[String]] \u003d\u003e Option(givenNames).filter(_.size \u003e 1).map(_.tail.map(buildName)) })",
      "dateUpdated": "Mar 4, 2016 4:04:44 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": false,
        "tableHide": false,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1457021907387_-1673238607",
      "id": "20160303-171827_500973316",
      "dateCreated": "Mar 3, 2016 5:18:27 PM",
      "dateStarted": "Mar 4, 2016 2:25:13 PM",
      "dateFinished": "Mar 4, 2016 2:25:48 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Authors",
      "text": "val authors \u003d sqlc.read.parquet(\n        s\"$ProcessingDir/authors.parquet\"\n    ).filter(\n        \u0027did \u003d\u003d\u003d DatasetId \u0026\u0026 \u0027is_valid \u003d\u003d\u003d true\n    ).withColumn(\n        \"first_name\", extractFirstName(\u0027given_names)\n    ).withColumn(\n        \"middle_names\", extractMiddleNames(\u0027given_names)\n    ).repartition(\n        NumPartitions\n    ).persist(org.apache.spark.storage.StorageLevel.MEMORY_ONLY_SER)",
      "dateUpdated": "Mar 4, 2016 4:04:44 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "title": true,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431331413670_-820765296",
      "id": "20150511-080333_466755073",
      "dateCreated": "May 11, 2015 8:03:33 AM",
      "dateStarted": "Mar 4, 2016 2:36:31 PM",
      "dateFinished": "Mar 4, 2016 2:37:01 PM",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "",
      "text": "authors.printSchema()",
      "dateUpdated": "Mar 4, 2016 4:04:44 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431421252241_-922949199",
      "id": "20150512-090052_466755073",
      "dateCreated": "May 12, 2015 9:00:52 AM",
      "dateStarted": "Mar 4, 2016 2:25:48 PM",
      "dateFinished": "Mar 4, 2016 2:25:50 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Metrics  1/2",
      "text": "val authorCount \u003d authors.count()\n\ndef authorPercentage(x: Long): Float \u003d (x / authorCount.toFloat) * 100\n\nval authorCounts \u003d Seq(\n    authors.filter(\"first_name is null\").count(),\n    authors.filter(\"size(middle_names) \u003e 0\").count(),\n    authors.filter(\"nickname is not null\").count(),\n    authors.filter(\"suffix is not null\").count(),\n    authors.selectExpr(\"lower(last_name)\").distinct.count(),\n    authors.selectExpr(\"lower(first_name)\").distinct.count(),\n    authors.explode(\"middle_names\", \"middle_name\")((a: Seq[String]) \u003d\u003e Option(a).getOrElse(Seq.empty)).selectExpr(\"lower(middle_name)\").distinct.count(),\n    authors.selectExpr(\"lower(nickname)\").distinct.count(),\n    authors.selectExpr(\"lower(suffix)\").distinct.count())\n\nval authorPercentages \u003d authorCounts.map(authorPercentage)",
      "dateUpdated": "Mar 4, 2016 4:04:44 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false,
        "editorHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431332902734_1810121968",
      "id": "20150511-082822_1086708493",
      "dateCreated": "May 11, 2015 8:28:22 AM",
      "dateStarted": "Mar 4, 2016 2:25:50 PM",
      "dateFinished": "Mar 4, 2016 2:26:05 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Metrics 2/2",
      "text": "println(s\"authors: $authorCount\")\nprintln()\nprintln(f\"authors without first name: ${authorCounts(0)} (${authorPercentages(0)}%.2f %%)\")\nprintln(f\"authors with middle names: ${authorCounts(1)} (${authorPercentages(1)}%.2f %%)\")\nprintln(f\"authors with nickname name: ${authorCounts(2)} (${authorPercentages(2)}%.2f %%)\")\nprintln(f\"authors with suffix: ${authorCounts(3)} (${authorPercentages(3)}%.2f %%)\")\nprintln()\nprintln(f\"distinct author last names: ${authorCounts(4)} (${authorPercentages(4)}%.2f %%)\")\nprintln(f\"distinct author first names: ${authorCounts(5)} (${authorPercentages(5)}%.2f %%)\")\nprintln(f\"distinct author middle names: ${authorCounts(6)} (${authorPercentages(6)}%.2f %%)\")\nprintln(f\"distinct author nicknames: ${authorCounts(7)} (${authorPercentages(7)}%.2f %%)\")\nprintln(f\"distinct author suffixes: ${authorCounts(8)} (${authorPercentages(8)}%.2f %%)\")",
      "dateUpdated": "Mar 4, 2016 4:04:44 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false,
        "editorHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431332081542_-965248637",
      "id": "20150511-081441_303998289",
      "dateCreated": "May 11, 2015 8:14:41 AM",
      "dateStarted": "Mar 4, 2016 2:25:50 PM",
      "dateFinished": "Mar 4, 2016 2:26:07 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Imports",
      "text": "import org.apache.spark.rdd.RDD\nimport org.apache.spark.graphx._",
      "dateUpdated": "Mar 4, 2016 4:04:44 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false,
        "editorHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431336368404_891094166",
      "id": "20150511-092608_1730033307",
      "dateCreated": "May 11, 2015 9:26:08 AM",
      "dateStarted": "Mar 4, 2016 2:26:05 PM",
      "dateFinished": "Mar 4, 2016 2:26:07 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Labels",
      "text": "type Label \u003d Byte\n\nval AuthorL: Label \u003d 0\nval PublicationL: Label \u003d 1\nval AlgoKeyL: Label \u003d 2",
      "dateUpdated": "Mar 4, 2016 4:04:44 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "title": true,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431333113160_875858049",
      "id": "20150511-083153_718218818",
      "dateCreated": "May 11, 2015 8:31:53 AM",
      "dateStarted": "Mar 4, 2016 2:26:07 PM",
      "dateFinished": "Mar 4, 2016 2:26:08 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Sanity checks",
      "text": "/*\n- authors.id is unique for a given authors.did\n- authors.last_name is always defined\n*/\n\nassert(authors.select(\u0027id).distinct.count() \u003d\u003d authors.select(\u0027id).count())\nassert(authors.filter(\u0027last_name.isNull).count() \u003d\u003d 0)",
      "dateUpdated": "Mar 4, 2016 4:05:47 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "title": true,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431335858615_-2012541197",
      "id": "20150511-091738_469899649",
      "dateCreated": "May 11, 2015 9:17:38 AM",
      "dateStarted": "Mar 4, 2016 2:26:07 PM",
      "dateFinished": "Mar 4, 2016 2:26:09 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "algoKeyUDF",
      "text": "val algoKeyUDF \u003d udf { (lastName: String, firstName: String) \u003d\u003e (lastName + Option(firstName).map(e \u003d\u003e \" \" + e.take(1)).getOrElse(\"\")).toLowerCase() }",
      "dateUpdated": "Mar 4, 2016 4:04:44 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "title": true,
        "editorHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431361028150_-1571033277",
      "id": "20150511-161708_754207811",
      "dateCreated": "May 11, 2015 4:17:08 PM",
      "dateStarted": "Mar 4, 2016 2:26:08 PM",
      "dateFinished": "Mar 4, 2016 2:26:10 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Authors with algo key",
      "text": "val authors2 \u003d authors.withColumn(\"algo_key\", algoKeyUDF(\u0027last_name, \u0027first_name)).persist(org.apache.spark.storage.StorageLevel.MEMORY_ONLY_SER)",
      "dateUpdated": "Mar 4, 2016 4:04:44 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "title": true,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431339244660_1582406385",
      "id": "20150511-101404_1108079082",
      "dateCreated": "May 11, 2015 10:14:04 AM",
      "dateStarted": "Mar 4, 2016 2:26:09 PM",
      "dateFinished": "Mar 4, 2016 2:26:10 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Vertices",
      "text": "val authorVertices \u003d authors2.select(\u0027id).map(r \u003d\u003e (r.getLong(0).toString, AuthorL))\nval publicationVertices \u003d authors2.select(\u0027pub_id).distinct.map(r \u003d\u003e (r.getLong(0).toString, PublicationL))\n\nval algoKeyVertices \u003d authors2.select(\u0027algo_key).distinct.map(r \u003d\u003e (r.getString(0), AlgoKeyL))\n\nval vertices \u003d (authorVertices ++ publicationVertices ++ algoKeyVertices).zipWithUniqueId().map(_.swap).persist(org.apache.spark.storage.StorageLevel.MEMORY_ONLY_SER)",
      "dateUpdated": "Mar 4, 2016 4:04:44 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "editorHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431334846699_165276616",
      "id": "20150511-090046_356897544",
      "dateCreated": "May 11, 2015 9:00:46 AM",
      "dateStarted": "Mar 4, 2016 2:26:10 PM",
      "dateFinished": "Mar 4, 2016 2:26:11 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "ID mapping",
      "text": "val authorIdMapping \u003d sc.broadcast(vertices.filter(_._2._2 \u003d\u003d AuthorL).map { case (vid, (entityId, _)) \u003d\u003e (entityId.toLong, vid) }.collect().toMap)\nval publicationIdMapping \u003d sc.broadcast(vertices.filter(_._2._2 \u003d\u003d PublicationL).map { case (vid, (entityId, _)) \u003d\u003e (entityId.toLong, vid) }.collect().toMap)\nval algoKeyIdMapping \u003d sc.broadcast(vertices.filter(_._2._2 \u003d\u003d AlgoKeyL).map { case (vid, (entityId, _)) \u003d\u003e (entityId, vid) }.collect().toMap)",
      "dateUpdated": "Mar 4, 2016 4:04:44 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "editorHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431338674831_402741066",
      "id": "20150511-100434_1308740591",
      "dateCreated": "May 11, 2015 10:04:34 AM",
      "dateStarted": "Mar 4, 2016 2:26:10 PM",
      "dateFinished": "Mar 4, 2016 2:26:22 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Metrics",
      "text": "authorIdMapping.value.size\npublicationIdMapping.value.size\nalgoKeyIdMapping.value.size",
      "dateUpdated": "Mar 4, 2016 4:04:44 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431338988410_12663165",
      "id": "20150511-100948_258244755",
      "dateCreated": "May 11, 2015 10:09:48 AM",
      "dateStarted": "Mar 4, 2016 2:26:11 PM",
      "dateFinished": "Mar 4, 2016 2:26:22 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Edges",
      "text": "val publicationEdges \u003d authors2.select(\u0027id, \u0027pub_id).map { r \u003d\u003e\n    val srcId \u003d authorIdMapping.value(r.getLong(0))\n    val dstId \u003d publicationIdMapping.value(r.getLong(1))\n    Edge(srcId, dstId, 0)\n}.persist(org.apache.spark.storage.StorageLevel.MEMORY_ONLY_SER)\n\nval algoKeyEdges \u003d authors2.select(\u0027id, \u0027algo_key).map { r \u003d\u003e\n    val srcId \u003d authorIdMapping.value(r.getLong(0))\n    val dstId \u003d algoKeyIdMapping.value(r.getString(1))\n    Edge(srcId, dstId, 1)\n}.persist(org.apache.spark.storage.StorageLevel.MEMORY_ONLY_SER)\n\nval edges \u003d publicationEdges ++ algoKeyEdges",
      "dateUpdated": "Mar 4, 2016 4:04:44 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431334840875_-411477310",
      "id": "20150511-090040_1335412636",
      "dateCreated": "May 11, 2015 9:00:40 AM",
      "dateStarted": "Mar 4, 2016 2:26:22 PM",
      "dateFinished": "Mar 4, 2016 2:26:23 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Sanity checks",
      "text": "assert(publicationEdges.count \u003d\u003d publicationEdges.distinct.count)\nassert(algoKeyEdges.count \u003d\u003d algoKeyEdges.distinct.count)",
      "dateUpdated": "Mar 4, 2016 4:04:44 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431339733922_1026733739",
      "id": "20150511-102213_702446638",
      "dateCreated": "May 11, 2015 10:22:13 AM",
      "dateStarted": "Mar 4, 2016 2:26:22 PM",
      "dateFinished": "Mar 4, 2016 2:26:26 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Graph",
      "text": "val graph \u003d Graph[(String, Label), Int](\n    vertices,\n    edges,\n    edgeStorageLevel \u003d org.apache.spark.storage.StorageLevel.MEMORY_ONLY_SER,\n    vertexStorageLevel \u003d org.apache.spark.storage.StorageLevel.MEMORY_ONLY_SER)",
      "dateUpdated": "Mar 4, 2016 4:04:44 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "editorHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431334892148_1813033561",
      "id": "20150511-090132_2047579859",
      "dateCreated": "May 11, 2015 9:01:32 AM",
      "dateStarted": "Mar 4, 2016 2:26:23 PM",
      "dateFinished": "Mar 4, 2016 2:26:26 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Metrics",
      "text": "graph.numVertices\ngraph.numEdges",
      "dateUpdated": "Mar 4, 2016 4:04:44 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431334890844_935806069",
      "id": "20150511-090130_606953687",
      "dateCreated": "May 11, 2015 9:01:30 AM",
      "dateStarted": "Mar 4, 2016 2:26:26 PM",
      "dateFinished": "Mar 4, 2016 2:26:32 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Neighbors IDs",
      "text": "val nbrs \u003d graph.collectNeighborIds(EdgeDirection.In).persist(org.apache.spark.storage.StorageLevel.MEMORY_ONLY_SER)",
      "dateUpdated": "Mar 4, 2016 4:04:44 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431334889468_-12215221",
      "id": "20150511-090129_525020581",
      "dateCreated": "May 11, 2015 9:01:29 AM",
      "dateStarted": "Mar 4, 2016 2:26:26 PM",
      "dateFinished": "Mar 4, 2016 2:26:32 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Metrics",
      "text": "nbrs.values.map(_.size).max",
      "dateUpdated": "Mar 4, 2016 4:04:45 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431334883292_-355041815",
      "id": "20150511-090123_476594715",
      "dateCreated": "May 11, 2015 9:01:23 AM",
      "dateStarted": "Mar 4, 2016 2:26:32 PM",
      "dateFinished": "Mar 4, 2016 2:26:34 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Neighbors Graph",
      "text": "val nbrsGraph: Graph[Array[VertexId], Int] \u003d graph.outerJoinVertices(nbrs) { (_, _, optNbrs) \u003d\u003e optNbrs.getOrElse(Array.empty[VertexId]) }",
      "dateUpdated": "Mar 4, 2016 4:04:45 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431334887964_270959970",
      "id": "20150511-090127_426146704",
      "dateCreated": "May 11, 2015 9:01:27 AM",
      "dateStarted": "Mar 4, 2016 2:26:33 PM",
      "dateFinished": "Mar 4, 2016 2:26:35 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "similarity Vertices",
      "text": "val simVertices \u003d graph.vertices.filter(_._2._2 \u003d\u003d AuthorL)",
      "dateUpdated": "Mar 4, 2016 4:04:45 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "editorHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431334934044_-1421504469",
      "id": "20150511-090214_1352386809",
      "dateCreated": "May 11, 2015 9:02:14 AM",
      "dateStarted": "Mar 4, 2016 2:26:35 PM",
      "dateFinished": "Mar 4, 2016 2:26:35 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "similarity Edges",
      "text": "def sortIdPair(id1: VertexId, id2: VertexId) : (VertexId, VertexId) \u003d if (id1 \u003c\u003d id2) (id1, id2) else (id2, id1)\n\ndef reduceFunc(w1: Int, w2: Int): Int \u003d if (w1 * w2 !\u003d 0) w1 + w2 else 0\n\nval simEdges \u003d nbrsGraph.triplets.flatMap(t \u003d\u003e t.dstAttr.filterNot(_ \u003d\u003d t.srcId).map(dstId \u003d\u003e (sortIdPair(t.srcId, dstId), t.attr))).reduceByKey(reduceFunc).map { case ((srcId, dstId), attr) \u003d\u003e Edge(srcId, dstId, attr) }",
      "dateUpdated": "Mar 4, 2016 4:04:45 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431334977629_-977611508",
      "id": "20150511-090257_1495208090",
      "dateCreated": "May 11, 2015 9:02:57 AM",
      "dateStarted": "Mar 4, 2016 2:26:35 PM",
      "dateFinished": "Mar 4, 2016 2:26:36 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "similarity Graph",
      "text": "val simGraph \u003d Graph[(String, Label), Int](\n    simVertices,\n    simEdges,\n    edgeStorageLevel \u003d org.apache.spark.storage.StorageLevel.MEMORY_ONLY_SER,\n    vertexStorageLevel \u003d org.apache.spark.storage.StorageLevel.MEMORY_ONLY_SER)",
      "dateUpdated": "Mar 4, 2016 4:04:45 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431334974509_-932611211",
      "id": "20150511-090254_385610058",
      "dateCreated": "May 11, 2015 9:02:54 AM",
      "dateStarted": "Mar 4, 2016 2:26:36 PM",
      "dateFinished": "Mar 4, 2016 2:26:36 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Metrics",
      "text": "simGraph.numVertices\nsimGraph.numEdges",
      "dateUpdated": "Mar 4, 2016 4:04:45 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431334998245_-1376580793",
      "id": "20150511-090318_2131011684",
      "dateCreated": "May 11, 2015 9:03:18 AM",
      "dateStarted": "Mar 4, 2016 2:26:36 PM",
      "dateFinished": "Mar 4, 2016 2:26:52 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Similarity Threshold",
      "text": "val simThreshold \u003d 1 // To be tuned",
      "dateUpdated": "Mar 4, 2016 4:04:45 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431416364802_-2093558904",
      "id": "20150512-073924_1149611362",
      "dateCreated": "May 12, 2015 7:39:24 AM",
      "dateStarted": "Mar 4, 2016 2:26:36 PM",
      "dateFinished": "Mar 4, 2016 2:26:52 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "connected components Similarity Graph",
      "text": "val ccSimGraph: Graph[VertexId, Int] \u003d simGraph.subgraph(epred \u003d t \u003d\u003e t.attr \u003e\u003d simThreshold).connectedComponents().persist(org.apache.spark.storage.StorageLevel.MEMORY_ONLY_SER)",
      "dateUpdated": "Mar 4, 2016 4:04:45 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431335014821_-77052250",
      "id": "20150511-090334_433383915",
      "dateCreated": "May 11, 2015 9:03:34 AM",
      "dateStarted": "Mar 4, 2016 2:26:52 PM",
      "dateFinished": "Mar 4, 2016 2:27:20 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "maximum Neighbors Similarity",
      "text": "def sendSimilarity(ctx: EdgeContext[VertexId, Int, Int]) \u003d {\n  val w \u003d ctx.attr\n  ctx.sendToSrc(w)\n  ctx.sendToDst(w)\n}\n\nval maxNbrsSimilarity: VertexRDD[Int] \u003d ccSimGraph.aggregateMessages[Int](sendSimilarity, (w1, w2) \u003d\u003e Math.max(w1, w2), TripletFields.EdgeOnly)",
      "dateUpdated": "Mar 4, 2016 4:04:45 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431335013269_-1043541487",
      "id": "20150511-090333_955164076",
      "dateCreated": "May 11, 2015 9:03:33 AM",
      "dateStarted": "Mar 4, 2016 2:26:53 PM",
      "dateFinished": "Mar 4, 2016 2:27:20 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Connected Components Maximum Similarity Graph",
      "text": "val ccMaxSimGraph: Graph[(VertexId, Int), Int] \u003d ccSimGraph.outerJoinVertices(maxNbrsSimilarity) { (_, cc, optMax) \u003d\u003e (cc, optMax.getOrElse(0)) }.persist(org.apache.spark.storage.StorageLevel.MEMORY_ONLY_SER)",
      "dateUpdated": "Mar 4, 2016 4:04:45 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431335085518_-1328766305",
      "id": "20150511-090445_25572266",
      "dateCreated": "May 11, 2015 9:04:45 AM",
      "dateStarted": "Mar 4, 2016 2:27:20 PM",
      "dateFinished": "Mar 4, 2016 2:27:21 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "maximum Similarity Degree",
      "text": "def sendMaxSimDeg(ctx: EdgeContext[(VertexId, Int), Int, Int]) \u003d {\n  if (ctx.srcAttr._2 \u003d\u003d ctx.attr) ctx.sendToSrc(1)\n  if (ctx.dstAttr._2 \u003d\u003d ctx.attr) ctx.sendToDst(1)\n}\n\nval maxSimDegree: VertexRDD[Int] \u003d ccMaxSimGraph.aggregateMessages[Int](sendMaxSimDeg, _ + _)",
      "dateUpdated": "Mar 4, 2016 4:04:45 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431335084014_-317276771",
      "id": "20150511-090444_1128867133",
      "dateCreated": "May 11, 2015 9:04:44 AM",
      "dateStarted": "Mar 4, 2016 2:27:21 PM",
      "dateFinished": "Mar 4, 2016 2:27:21 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "result Similarity Graph",
      "text": "val resultSimGraph: Graph[(VertexId, Int, Int), Int] \u003d ccMaxSimGraph.outerJoinVertices(maxSimDegree) { case (_, (cc, maxSim), maxSimDegOpt) \u003d\u003e (cc, maxSim, maxSimDegOpt.getOrElse(0)) }.persist(org.apache.spark.storage.StorageLevel.MEMORY_ONLY_SER)",
      "dateUpdated": "Mar 4, 2016 4:04:45 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431335101327_1178672926",
      "id": "20150511-090501_1923941944",
      "dateCreated": "May 11, 2015 9:05:01 AM",
      "dateStarted": "Mar 4, 2016 2:27:21 PM",
      "dateFinished": "Mar 4, 2016 2:27:21 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Metrics",
      "text": "resultSimGraph.numVertices\nresultSimGraph.numEdges",
      "dateUpdated": "Mar 4, 2016 4:04:45 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431340870799_-1037268442",
      "id": "20150511-104110_23918534",
      "dateCreated": "May 11, 2015 10:41:10 AM",
      "dateStarted": "Mar 4, 2016 2:27:22 PM",
      "dateFinished": "Mar 4, 2016 2:27:32 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Disambiguated Authors",
      "text": "val authorVertexIdMapping \u003d sc.broadcast(authorIdMapping.value.map(_.swap))\n\nval disambiguatedAuthors \u003d resultSimGraph.vertices.map {\n    case (vid, (cc, maxSim, maxSimDeg)) \u003d\u003e (authorVertexIdMapping.value(vid), cc, maxSim, maxSimDeg)\n}.toDF(\"original_id\", \"dis_id\", \"max_sim\", \"max_sim_deg\").persist(org.apache.spark.storage.StorageLevel.MEMORY_ONLY_SER)\n\ndisambiguatedAuthors.registerTempTable(\"disambiguated_authors\")",
      "dateUpdated": "Mar 4, 2016 4:04:45 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "title": true,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431335099934_1864280141",
      "id": "20150511-090459_1283991027",
      "dateCreated": "May 11, 2015 9:04:59 AM",
      "dateStarted": "Mar 4, 2016 2:27:22 PM",
      "dateFinished": "Mar 4, 2016 2:27:34 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Metrics 1/2",
      "text": "val disambiguatedAuthorCount \u003d disambiguatedAuthors.select(\u0027dis_id).distinct.count()\n\nval disambiguatedAuthorPercentage \u003d authorPercentage(disambiguatedAuthorCount)",
      "dateUpdated": "Mar 4, 2016 4:04:45 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431340536484_1857928160",
      "id": "20150511-103536_1535762325",
      "dateCreated": "May 11, 2015 10:35:36 AM",
      "dateStarted": "Mar 4, 2016 2:27:33 PM",
      "dateFinished": "Mar 4, 2016 2:27:37 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Metrics 2/2",
      "text": "println(f\"disambiguated authors: $disambiguatedAuthorCount ($disambiguatedAuthorPercentage%.2f %%)\")",
      "dateUpdated": "Mar 4, 2016 4:04:45 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false,
        "editorHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431345140950_1477749153",
      "id": "20150511-115220_1284093736",
      "dateCreated": "May 11, 2015 11:52:20 AM",
      "dateStarted": "Mar 4, 2016 2:27:34 PM",
      "dateFinished": "Mar 4, 2016 2:27:37 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Authors with disambiguated authors",
      "text": "// Specific did and is_valid \u003d true\nval authors3 \u003d disambiguatedAuthors.join(authors2, \u0027id \u003d\u003d\u003d \u0027original_id)\n\nauthors3.registerTempTable(\"authors_3\")",
      "dateUpdated": "Mar 4, 2016 4:04:45 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "title": true,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431347538265_-57366142",
      "id": "20150511-123218_1467174565",
      "dateCreated": "May 11, 2015 12:32:18 PM",
      "dateStarted": "Mar 4, 2016 2:27:37 PM",
      "dateFinished": "Mar 4, 2016 2:27:37 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Sanity checks",
      "text": "/*\n- no authors were lost during processing\n- one algo_key by dis_id\n*/\n\nassert(authors.count() \u003d\u003d authors3.count())\n\nassert(authors3.select(\u0027algo_key, \u0027dis_id).distinct.groupBy(\u0027algo_key).count().filter(\u0027count \u003e 1).count() \u003d\u003d 0) // FIXME Should be the same amount!",
      "dateUpdated": "Mar 4, 2016 4:05:36 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431347246822_-1312646916",
      "id": "20150511-122726_1012105173",
      "dateCreated": "May 11, 2015 12:27:26 PM",
      "dateStarted": "Mar 4, 2016 2:27:37 PM",
      "dateFinished": "Mar 4, 2016 2:27:46 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Debug",
      "text": "val publications \u003d sqlc.read.parquet(\n        s\"$ProcessingDir/publications.parquet\"\n    ).filter(\n        \u0027did \u003d\u003d\u003d DatasetId \u0026\u0026 \u0027is_valid \u003d\u003d\u003d true\n    ).repartition(\n        NumPartitions\n    ).persist(org.apache.spark.storage.StorageLevel.MEMORY_ONLY_SER)\n\npublications.registerTempTable(\"publications\")",
      "dateUpdated": "Mar 4, 2016 4:04:45 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "title": true,
        "editorHide": false,
        "editorMode": "ace/mode/scala",
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431361680607_-1354484232",
      "id": "20150511-162800_1905952445",
      "dateCreated": "May 11, 2015 4:28:00 PM",
      "dateStarted": "Mar 4, 2016 2:37:06 PM",
      "dateFinished": "Mar 4, 2016 2:37:06 PM",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "FIXME: Incorrect \"By:\"",
      "text": "%sql\nselect c, algo_key, t3.pub_id, title, year, times_cited, is_valid\nfrom (\n    select *\n    from (\n        select algo_key, pub_id, count(*) c\n        from (select distinct algo_key, pub_id, dis_id from authors_3) t1\n        group by algo_key, pub_id\n        ) t2\n    where c \u003e 1\n    ) t3\njoin publications\non t3.pub_id \u003d publications.pub_id\norder by c desc, algo_key asc\nlimit 8",
      "dateUpdated": "Mar 4, 2016 4:04:45 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "c",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "algo_key",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "c",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "title": true,
        "tableHide": false,
        "editorMode": "ace/mode/sql",
        "enabled": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431361917497_1314668317",
      "id": "20150511-163157_167677103",
      "dateCreated": "May 11, 2015 4:31:57 PM",
      "dateStarted": "Mar 4, 2016 2:27:46 PM",
      "dateFinished": "Mar 4, 2016 2:27:59 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "name Normalization",
      "text": "def cleanName(p: String): String \u003d p.replace(\" \u0027\", \"\u0027\").replace(\"\u0027 \", \"\u0027\").replace(\"\u0027\u0027\", \"\").replace(\"|\", \"\")\n\n// Not suitable for suffixes and for initials: currently not used\n// capitalizeName(p.toLowerCase(), Seq(\u0027 \u0027, \u0027\u0027\u0027, \u0027-\u0027))\ndef capitalizeName(p: String, separators: Seq[Char]): String \u003d {\n    var s \u003d p\n    separators.foreach(sep \u003d\u003e s \u003d s.split(sep).map(_.capitalize).mkString(sep.toString))\n    s\n}\n\ndef normalizeName(p: String): String \u003d cleanName(p).toUpperCase().split(\u0027 \u0027).map(e \u003d\u003e if (e.length \u003d\u003d 1) s\"$e.\" else e).mkString(\" \")\n\n// Nickname is currently ignored\ndef generateFullName(firstName: Option[String], middleNames: Option[Seq[String]], lastName: String, suffix: Option[String]): String \u003d {\n    normalizeName(\n        Seq(\n            firstName,\n            middleNames.map(_.mkString(\" \")),\n            Some(lastName + suffix.map(e \u003d\u003e s\", $e\").getOrElse(\"\"))\n        ).flatten.mkString(\" \"))\n}\n\nval generateFullNameUDF \u003d udf { (firstName: String, middleNames: Seq[String], lastName: String, suffix: String) \u003d\u003e generateFullName(Option(firstName), Option(middleNames), lastName, Option(suffix)) }",
      "dateUpdated": "Mar 4, 2016 4:04:45 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431442590784_-1470722711",
      "id": "20150512-145630_1592254033",
      "dateCreated": "May 12, 2015 2:56:30 PM",
      "dateStarted": "Mar 4, 2016 2:27:47 PM",
      "dateFinished": "Mar 4, 2016 2:28:00 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Authors with generated full name",
      "text": "val authors4 \u003d authors3.withColumn(\n    \"generated_full_name\", generateFullNameUDF(\u0027first_name, \u0027middle_names, \u0027last_name, \u0027suffix)\n).persist(org.apache.spark.storage.StorageLevel.MEMORY_ONLY_SER)\n\nauthors4.registerTempTable(\"authors_4\")",
      "dateUpdated": "Mar 4, 2016 4:04:45 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "title": true,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431445098563_-610422002",
      "id": "20150512-153818_1203422245",
      "dateCreated": "May 12, 2015 3:38:18 PM",
      "dateStarted": "Mar 4, 2016 2:27:59 PM",
      "dateFinished": "Mar 4, 2016 2:28:02 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Sanity Checks",
      "text": "/*\n- no unchecked characters\n*/\n\nassert(authors4.select(\u0027generated_full_name).map(_.getString(0)).filter(e \u003d\u003e !e.matches(\"\"\"[A-Z \u0027\\-\\.\\,]+\"\"\")).count() \u003d\u003d 0)",
      "dateUpdated": "Mar 4, 2016 4:05:07 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431442825826_1012014324",
      "id": "20150512-150025_225408404",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "\u003cconsole\u003e:26: error: not found: value authors4\nassert(authors4.select(\u0027generated_full_name).map(_.getString(0)).filter(e \u003d\u003e !e.matches(\"\"\"[A-Z \u0027\\-\\.\\,]+\"\"\")).count() \u003d\u003d 0)\n       ^\n"
      },
      "dateCreated": "May 12, 2015 3:00:25 PM",
      "dateStarted": "Mar 4, 2016 4:05:07 PM",
      "dateFinished": "Mar 4, 2016 4:05:36 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql\nselect generated_full_name, first_name, middle_names, last_name, suffix, raw, dis_id\nfrom authors_4\nlimit 8",
      "dateUpdated": "Mar 4, 2016 4:04:46 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "generated_full_name",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "first_name",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "generated_full_name",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "tableHide": false,
        "editorMode": "ace/mode/sql",
        "enabled": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431444402390_-1588084805",
      "id": "20150512-152642_1064568194",
      "dateCreated": "May 12, 2015 3:26:42 PM",
      "dateStarted": "Mar 4, 2016 2:28:02 PM",
      "dateFinished": "Mar 4, 2016 2:28:02 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "",
      "text": "%sql\nselect generated_full_name, first_name, middle_names, last_name, suffix, raw, dis_id\nfrom authors_4\nwhere instr(generated_full_name, \"${symbol\u003d-,-|\\\u0027|.}\") \u003e 0\nlimit 8",
      "dateUpdated": "Mar 4, 2016 4:04:46 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "generated_full_name",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "first_name",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "generated_full_name",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "first_name",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "title": false,
        "tableHide": false,
        "editorMode": "ace/mode/sql",
        "enabled": true,
        "editorHide": false
      },
      "settings": {
        "params": {
          "symbol": "-"
        },
        "forms": {
          "symbol": {
            "name": "symbol",
            "defaultValue": "-",
            "options": [
              {
                "value": "-"
              },
              {
                "value": "\u0027"
              },
              {
                "value": "."
              }
            ],
            "hidden": false
          }
        }
      },
      "jobName": "paragraph_1431442822836_1128577917",
      "id": "20150512-150022_979757267",
      "dateCreated": "May 12, 2015 3:00:22 PM",
      "dateStarted": "Mar 4, 2016 2:28:02 PM",
      "dateFinished": "Mar 4, 2016 2:28:03 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Normalized full name selection",
      "text": "def selectFullName(fullNames: Map[String, Int]) \u003d {\n    val maxOcc \u003d fullNames.values.max\n    fullNames.filter(_._2 \u003d\u003d maxOcc).keys.maxBy(_.length)\n}\n\nval selectFullNamesUDF \u003d udf { (fullNames: Map[String, Int]) \u003d\u003e selectFullName(fullNames) }",
      "dateUpdated": "Mar 4, 2016 4:04:46 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "tableHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431442872588_828535072",
      "id": "20150512-150112_2024569134",
      "dateCreated": "May 12, 2015 3:01:12 PM",
      "dateStarted": "Mar 4, 2016 2:28:03 PM",
      "dateFinished": "Mar 4, 2016 2:28:03 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "aggregated Full Names",
      "text": "val aggregatedFullNames \u003d authors4.select(\n    \u0027dis_id, \u0027generated_full_name\n).map(\n    r \u003d\u003e (r.getLong(0), r.getString(1))\n).aggregateByKey(collection.mutable.HashMap.empty[String, Int])(\n    (acc, v) \u003d\u003e {\n        acc(v) \u003d acc.getOrElse(v, 0) + 1 // withDefaultValue() doesn\u0027t pass the Kryo serialization\n        acc\n    },\n    (acc1, acc2) \u003d\u003e {\n        val (smallest, largest) \u003d if (acc1.size \u003c\u003d acc2.size) (acc1, acc2) else (acc2, acc1)\n        largest ++\u003d smallest.map { case (k, v) \u003d\u003e k -\u003e (v + largest.getOrElse(k, 0)) }\n    }\n).toDF(\n    \"dis_id\", \"full_names\"\n).withColumn(\n    \"dis_name\", selectFullNamesUDF(\u0027full_names)\n).persist(org.apache.spark.storage.StorageLevel.MEMORY_ONLY_SER)\n\naggregatedFullNames.registerTempTable(\"aggregated_full_names\")",
      "dateUpdated": "Mar 4, 2016 4:04:46 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "title": true,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431447583883_542207961",
      "id": "20150512-161943_262335707",
      "dateCreated": "May 12, 2015 4:19:43 PM",
      "dateStarted": "Mar 4, 2016 2:28:03 PM",
      "dateFinished": "Mar 4, 2016 2:28:04 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql select dis_name, full_names, dis_id from aggregated_full_names where size(full_names) \u003e 2 limit 8",
      "dateUpdated": "Mar 4, 2016 4:04:46 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "dis_name",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "full_names",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "yAxis": {
              "name": "full_names",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "tableHide": false,
        "editorMode": "ace/mode/sql",
        "enabled": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431442379365_-1842668152",
      "id": "20150512-145259_702326911",
      "dateCreated": "May 12, 2015 2:52:59 PM",
      "dateStarted": "Mar 4, 2016 2:28:04 PM",
      "dateFinished": "Mar 4, 2016 2:28:09 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Final authors DataFrame",
      "text": "val authors5 \u003d authors4.join(\n    aggregatedFullNames, authors4(\"dis_id\") \u003d\u003d\u003d aggregatedFullNames(\"dis_id\")\n).select(\n    // original fields\n    \u0027pub_id, \u0027id, \u0027raw, \u0027last_name, \u0027first_name, \u0027middle_names, \u0027suffix, \u0027nickname, \u0027affiliations,\n    // disambiguation result fields\n    authors4(\"dis_id\"), \u0027dis_name,\n    // disambiguation debug fields\n    \u0027generated_full_name //\u0027max_sim, \u0027max_sim_deg, \u0027algo_key, \u0027full_names\n).persist(org.apache.spark.storage.StorageLevel.MEMORY_ONLY_SER)\n\nauthors5.registerTempTable(\"authors_5\")",
      "dateUpdated": "Mar 4, 2016 4:04:46 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "title": true,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431447191147_-994998524",
      "id": "20150512-161311_2020892391",
      "dateCreated": "May 12, 2015 4:13:11 PM",
      "dateStarted": "Mar 4, 2016 2:28:04 PM",
      "dateFinished": "Mar 4, 2016 2:28:12 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql\nselect dis_name, generated_full_name, first_name, middle_names, last_name, suffix, raw, dis_id\nfrom authors_5\nwhere dis_name \u003c\u003e generated_full_name\nlimit 8",
      "dateUpdated": "Mar 4, 2016 4:04:46 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "dis_name",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "generated_full_name",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "dis_name",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "generated_full_name",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "tableHide": false,
        "editorMode": "ace/mode/sql",
        "enabled": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431449837468_1593697995",
      "id": "20150512-165717_1630901211",
      "dateCreated": "May 12, 2015 4:57:17 PM",
      "dateStarted": "Mar 4, 2016 2:28:09 PM",
      "dateFinished": "Mar 4, 2016 2:28:12 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val possibleWrongFullNamesC \u003d authors5.filter(\"dis_name \u003c\u003e generated_full_name\").count()\nval possibleWrongFullNamesP \u003d authorPercentage(possibleWrongFullNamesC)",
      "dateUpdated": "Mar 4, 2016 4:04:46 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431448783494_86441979",
      "id": "20150512-163943_1629650484",
      "dateCreated": "May 12, 2015 4:39:43 PM",
      "dateStarted": "Mar 4, 2016 2:28:12 PM",
      "dateFinished": "Mar 4, 2016 2:28:14 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Metrics",
      "text": "println(f\"authors with maybe a wrong full name: $possibleWrongFullNamesC ($possibleWrongFullNamesP%.2f %%)\")",
      "dateUpdated": "Mar 4, 2016 4:04:46 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "editorHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431449013297_-1472546591",
      "id": "20150512-164333_1647156680",
      "dateCreated": "May 12, 2015 4:43:33 PM",
      "dateStarted": "Mar 4, 2016 2:28:12 PM",
      "dateFinished": "Mar 4, 2016 2:28:15 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "authors5.show()",
      "dateUpdated": "Mar 4, 2016 4:04:46 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431440118198_-245007352",
      "id": "20150512-141518_509495565",
      "dateCreated": "May 12, 2015 2:15:18 PM",
      "dateStarted": "Mar 4, 2016 2:28:15 PM",
      "dateFinished": "Mar 4, 2016 2:28:15 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Write",
      "text": "OptSaveMode.foreach(authors5.write.mode(_).parquet(s\"$DisambigDir/disambiguated_authors_pOC-did_$DatasetId.parquet\"))",
      "dateUpdated": "Mar 4, 2016 4:04:46 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "title": true,
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1431419693038_-1520281995",
      "id": "20150512-083453_671794892",
      "dateCreated": "May 12, 2015 8:34:53 AM",
      "dateStarted": "Mar 4, 2016 2:38:02 PM",
      "dateFinished": "Mar 4, 2016 2:38:02 PM",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "",
      "dateUpdated": "Mar 4, 2016 4:04:46 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1438758107060_-1299275487",
      "id": "20150805-070147_114461519",
      "dateCreated": "Aug 5, 2015 7:01:47 AM",
      "dateStarted": "Mar 4, 2016 2:28:15 PM",
      "dateFinished": "Mar 4, 2016 2:28:18 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "[23] Authors disambiguation (PoC)",
  "id": "2ANTU1WYN",
  "angularObjects": {
    "2BD4H88Z1": [],
    "2BD1QADH4": [],
    "2BDHDMZPH": [],
    "2BCNPYMPW": [],
    "2BDRR3C3C": [],
    "2BBM98Y57": [],
    "2BECY547T": [],
    "2BB8PV5AF": [],
    "2BBS2SY48": [],
    "2BE8YHRPM": [],
    "2BDEEJDMM": [],
    "2BDJU4DCB": [],
    "2BF2YVJQX": [],
    "2BCHBM7Y2": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}